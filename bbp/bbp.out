
//dapt code:
#define min(x,y)    ((x) < (y) ? (x) : (y))
#define max(x,y)    ((x) > (y) ? (x) : (y))
#define floord(n,d) (((n)<0) ? -((-(n)+(d)-1)/(d)) : (n)/(d))

for (int w0 = 0; w0 <= floord(5 * n - 8, 48); w0 += 1) {
  #pragma omp parallel for
  for (int h0 = max(0, w0 - (n + 23) / 24 + 1); h0 <= min((n - 2) / 16, w0 - (2 * w0 + 2) / 5); h0 += 1) {
    for (int i0 = 16 * h0; i0 <= min(min(n - 2, 16 * h0 + 15), 24 * w0 - 24 * h0 + 22); i0 += 1) {
      for (int i1 = max(24 * w0 - 24 * h0, i0 + 1); i1 <= min(n - 1, 24 * w0 - 24 * h0 + 23); i1 += 1) {
        if ((arr[i1] >= arr[i0]) && (dp[i1] < (dp[i0] + 1))) {
          dp[i1] = (dp[i0] + 1);
        }
      }
    }
  }
}
