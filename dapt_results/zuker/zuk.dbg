
#######################################################################

#oryginal loop:

#schedule:
{ domain: "[N] -> { S_3[i, j] : i >= 0 and i < j < N; S_2[i, j, k] : i >= 0 and j < N and i < k <= -2 + j; S_0[i, j, k, m] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j; S_1[i, j, k] : i >= 0 and j < N and i < k < j; S_4[i, j] : i >= 0 and i < j < N }", child: { schedule: "[N] -> L_0[{ S_3[i, j] -> [(-i)]; S_2[i, j, k] -> [(-i)]; S_0[i, j, k, m] -> [(-i)]; S_1[i, j, k] -> [(-i)]; S_4[i, j] -> [(-i)] }]", child: { schedule: "[N] -> L_1[{ S_3[i, j] -> [(j)]; S_2[i, j, k] -> [(j)]; S_0[i, j, k, m] -> [(j)]; S_1[i, j, k] -> [(j)]; S_4[i, j] -> [(j)] }]", child: { sequence: [ { filter: "[N] -> { S_2[i, j, k]; S_0[i, j, k, m]; S_1[i, j, k] }", child: { schedule: "[N] -> L_2[{ S_2[i, j, k] -> [(k)]; S_0[i, j, k, m] -> [(k)]; S_1[i, j, k] -> [(k)] }]", child: { sequence: [ { filter: "[N] -> { S_0[i, j, k, m] }", child: { schedule: "[N] -> L_3[{ S_0[i, j, k, m] -> [(m)] }]" } }, { filter: "[N] -> { S_1[i, j, k] }" }, { filter: "[N] -> { S_2[i, j, k] }" } ] } } }, { filter: "[N] -> { S_3[i, j] }" }, { filter: "[N] -> { S_4[i, j] }" } ] } } } }

#domain:
[N] -> { S_3[i, j] : i >= 0 and i < j < N; S_2[i, j, k] : i >= 0 and j < N and i < k <= -2 + j; S_0[i, j, k, m] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j; S_1[i, j, k] : i >= 0 and j < N and i < k < j; S_4[i, j] : i >= 0 and i < j < N }

#schedule map:
[N] -> { S_1[i, j, k] -> [-i, j, 0, k, 1, 0]; S_2[i, j, k] -> [-i, j, 0, k, 2, 0]; S_0[i, j, k, m] -> [-i, j, 0, k, 0, m]; S_3[i, j] -> [-i, j, 1, 0, 0, 0]; S_4[i, j] -> [-i, j, 2, 0, 0, 0] }

#isl schedule:
{ domain: "[N] -> { S_3[i, j] : i >= 0 and i < j < N; S_2[i, j, k] : i >= 0 and j < N and i < k <= -2 + j; S_0[i, j, k, m] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j; S_1[i, j, k] : i >= 0 and j < N and i < k < j; S_4[i, j] : i >= 0 and i < j < N }", child: { schedule: "[N] -> [{ S_3[i, j] -> [(-i)]; S_2[i, j, k] -> [(-i)]; S_0[i, j, k, m] -> [(-i)]; S_1[i, j, k] -> [(-i)]; S_4[i, j] -> [(-i)] }, { S_3[i, j] -> [(j)]; S_2[i, j, k] -> [(j)]; S_0[i, j, k, m] -> [(j)]; S_1[i, j, k] -> [(j)]; S_4[i, j] -> [(j)] }]", permutable: 1, coincident: [ 1, 1 ], child: { schedule: "[N] -> [{ S_3[i, j] -> [(N)]; S_2[i, j, k] -> [(k)]; S_0[i, j, k, m] -> [(k)]; S_1[i, j, k] -> [(k)]; S_4[i, j] -> [(N)] }]", permutable: 1, coincident: [ 1 ], child: { set: [ { filter: "[N] -> { S_3[i, j]; S_4[i, j] }", child: { sequence: [ { filter: "[N] -> { S_3[i, j] }" }, { filter: "[N] -> { S_4[i, j] }" } ] } }, { filter: "[N] -> { S_1[i, j, k] }" }, { filter: "[N] -> { S_2[i, j, k]; S_0[i, j, k, m] }", child: { schedule: "[N] -> [{ S_2[i, j, k] -> [(N)]; S_0[i, j, k, m] -> [(m)] }]", permutable: 1, coincident: [ 1 ] } } ] } } } }

#isl schedule map:
[N] -> { S_4[i, j] -> [-i, j, N, 0, 1]; S_3[i, j] -> [-i, j, N, 0, 0]; S_0[i, j, k, m] -> [-i, j, k, 2, m]; S_2[i, j, k] -> [-i, j, k, 2, N]; S_1[i, j, k] -> [-i, j, k, 1, 0] }

#writes:
[N] -> { S_1[i, j, k] -> W[i, j] : i >= 0 and 0 <= j < N and i < k < j; S_0[i, j, k, m] -> V[i, j] : i >= 0 and 0 <= j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j; S_3[i, j] -> V[i, j] : i >= 0 and j > i and 0 <= j < N; S_4[i, j] -> W[i, j] : i >= 0 and j > i and 0 <= j < N; S_2[i, j, k] -> V[i, j] : i >= 0 and 0 <= j < N and i < k <= -2 + j }

#reads:
[N] -> { S_4[i, j] -> W[1 + i, j] : i >= 0 and j > i and 0 <= j < N; S_4[i, j] -> W[i, j] : i >= 0 and i < j < N; S_4[i, j] -> W[i, -1 + j] : i >= 0 and j > i and 0 < j < N; S_2[i, j, k] -> W[1 + i, k] : i >= 0 and j < N and k > i and 0 <= k <= -2 + j; S_2[i, j, k] -> W[1 + k, -1 + j] : i >= 0 and j < N and i < k <= -2 + j; S_1[i, j, k] -> W[1 + k, j] : i >= 0 and 0 <= j < N and k > i and -1 <= k < j; S_1[i, j, k] -> W[i, j] : i >= 0 and j < N and i < k < j; S_1[i, j, k] -> W[i, k] : i >= 0 and j < N and k > i and 0 <= k < j; S_3[i, j] -> V[i, j] : i >= 0 and i < j < N; S_3[i, j] -> V[1 + i, -1 + j] : i >= 0 and j > i and 0 < j < N; S_2[i, j, k] -> V[i, j] : i >= 0 and 0 <= j < N and i < k <= -2 + j; S_3[i, j] -> EHF[i, j] : i >= 0 and j > i and 0 <= j < N; S_0[i, j, k, m] -> EFL[i, j] : i >= 0 and 0 <= j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j; S_4[i, j] -> V[i, j] : i >= 0 and j > i and 0 <= j < N; S_0[i, j, k, m] -> V[i, j] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j; S_0[i, j, k, m] -> V[k, m] : i >= 0 and j < N and k > i and k >= 0 and m > k and m >= 0 and -29 - i + j + k <= m <= -3 - i + j + k and m < j }

#dep_raw:
[N] -> { S_0[i, j, k, m] -> S_2[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and k <= k' <= -2 + j; S_4[i, j] -> S_2[i' = -1 + i, j', k = j] : i > 0 and j > i and 2 + j <= j' < N; S_4[i, j] -> S_2[i', j' = 1 + j, k = -1 + i] : i < j <= -2 + N and 0 <= i' <= -2 + i; S_1[i, j, k] -> S_1[i' = i, j', k' = j] : i >= 0 and i < k < j and j < j' < N; S_1[i, j, k] -> S_1[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and k < k' < j; S_1[i, j, k] -> S_1[i', j' = j, k' = -1 + i] : j < N and i < k < j and 0 <= i' <= -2 + i; S_0[i, j, k, m] -> S_3[i', j' = i + j - i'] : k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and i' >= -1 + i and i' >= 0 and -N + i + j < i' <= i; S_3[i, j] -> S_4[i' = i, j' = j] : i >= 0 and i < j < N; S_0[i, j, k, m] -> S_0[i', j', k' = i, m' = j] : k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and 0 <= i' < i and j' > j and 3 - i + j + i' <= j' <= 29 - i + j + i' and j' < N; S_0[i, j, k, m] -> S_0[i' = i, j' = j, k', m'] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and k' > k and m' > k' and -29 - i + j + k' <= m' < j; S_0[i, j, k, m] -> S_0[i' = i, j' = j, k' = k, m'] : i >= 0 and j < N and k > i and m > k and m >= -29 - i + j + k and m < m' <= -3 - i + j + k and m' < j; S_4[i, j] -> S_4[i', j' = 1 - i + j + i'] : j > i and i' >= -1 + i and 0 <= i' <= i and i' <= -2 + N + i - j; S_4[i, j] -> S_1[i' = i, j', k = j] : i >= 0 and j > i and j < j' < N; S_4[i, j] -> S_1[i', j' = j, k = -1 + i] : i < j < N and 0 <= i' <= -2 + i; S_2[i, j, k] -> S_3[i', j' = i + j - i'] : i < k <= -2 + j and i' >= -1 + i and i' >= 0 and -N + i + j < i' <= i; S_0[i, j, k, m] -> S_4[i' = i, j' = j] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j; S_2[i, j, k] -> S_0[i', j', k' = i, m = j] : i < k <= -2 + j and 0 <= i' < i and j' > j and 3 - i + j + i' <= j' <= 29 - i + j + i' and j' < N; S_2[i, j, k] -> S_0[i' = i, j' = j, k', m] : i >= 0 and j < N and k > i and k' > k and m > k' and -29 - i + j + k' <= m < j; S_3[i, j] -> S_3[i' = -1 + i, j' = 1 + j] : i > 0 and i < j <= -2 + N; S_1[i, j, k] -> S_2[i' = -1 + i, j', k' = j] : i > 0 and i < k < j and 2 + j <= j' < N; S_1[i, j, k] -> S_2[i', j' = 1 + j, k' = -1 + i] : j <= -2 + N and i < k < j and 0 <= i' <= -2 + i; S_1[i, j, k] -> S_4[i', j'] : i < k < j and 0 <= i' <= i and j <= j' <= 1 - i + j + i' and j' < N; S_3[i, j] -> S_0[i', j', k = i, m = j] : j > i and 0 <= i' < i and j' > j and 3 - i + j + i' <= j' <= 29 - i + j + i' and j' < N; S_2[i, j, k] -> S_2[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and k < k' <= -2 + j; S_2[i, j, k] -> S_4[i' = i, j' = j] : i >= 0 and j < N and i < k <= -2 + j }

#dep_waw:
[N] -> { S_1[i, j, k] -> S_1[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and k < k' < j; S_0[i, j, k, m] -> S_3[i' = i, j' = j] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j; S_0[i, j, k, m] -> S_0[i' = i, j' = j, k', m'] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and k' > k and m' > k' and -29 - i + j + k' <= m' < j; S_0[i, j, k, m] -> S_0[i' = i, j' = j, k' = k, m'] : i >= 0 and j < N and k > i and m > k and m >= -29 - i + j + k and m < m' <= -3 - i + j + k and m' < j; S_2[i, j, k] -> S_3[i' = i, j' = j] : i >= 0 and j < N and i < k <= -2 + j; S_2[i, j, k] -> S_0[i' = i, j' = j, k', m] : i >= 0 and j < N and k > i and k' > k and m > k' and -29 - i + j + k' <= m < j; S_1[i, j, k] -> S_4[i' = i, j' = j] : i >= 0 and j < N and i < k < j; S_2[i, j, k] -> S_2[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and k < k' <= -2 + j; S_0[i, j, k, m] -> S_2[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and k <= k' <= -2 + j }

#dep_war:
[N] -> { S_1[i, j, k] -> S_1[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and k < k' < j; S_0[i, j, k, m] -> S_3[i' = i, j' = j] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j; S_0[i, j, k, m] -> S_0[i' = i, j' = j, k', m'] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and k' > k and m' > k' and -29 - i + j + k' <= m' < j; S_0[i, j, k, m] -> S_0[i' = i, j' = j, k' = k, m'] : i >= 0 and j < N and k > i and m > k and m >= -29 - i + j + k and m < m' <= -3 - i + j + k and m' < j; S_2[i, j, k] -> S_3[i' = i, j' = j] : i >= 0 and j < N and i < k <= -2 + j; S_2[i, j, k] -> S_0[i' = i, j' = j, k', m] : i >= 0 and j < N and k > i and k' > k and m > k' and -29 - i + j + k' <= m < j; S_1[i, j, k] -> S_4[i' = i, j' = j] : i >= 0 and j < N and i < k < j; S_2[i, j, k] -> S_2[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and k < k' <= -2 + j; S_0[i, j, k, m] -> S_2[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and k <= k' <= -2 + j }

#relations:
[N] -> { S_2[i, j, k] -> S_4[i' = i, j' = j] : i >= 0 and j < N and i < k <= -2 + j; S_4[i, j] -> S_2[i' = -1 + i, j', k = j] : i > 0 and j > i and 2 + j <= j' < N; S_4[i, j] -> S_2[i', j' = 1 + j, k = -1 + i] : i < j <= -2 + N and 0 <= i' <= -2 + i; S_1[i, j, k] -> S_1[i' = i, j', k' = j] : i >= 0 and i < k < j and j < j' < N; S_1[i, j, k] -> S_1[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and k < k' < j; S_1[i, j, k] -> S_1[i', j' = j, k' = -1 + i] : j < N and i < k < j and 0 <= i' <= -2 + i; S_0[i, j, k, m] -> S_3[i', j' = i + j - i'] : k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and i' >= -1 + i and i' >= 0 and -N + i + j < i' <= i; S_3[i, j] -> S_4[i' = i, j' = j] : i >= 0 and i < j < N; S_0[i, j, k, m] -> S_0[i', j', k' = i, m' = j] : k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and 0 <= i' < i and j' > j and 3 - i + j + i' <= j' <= 29 - i + j + i' and j' < N; S_0[i, j, k, m] -> S_0[i' = i, j' = j, k', m'] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and k' > k and m' > k' and -29 - i + j + k' <= m' < j; S_0[i, j, k, m] -> S_0[i' = i, j' = j, k' = k, m'] : i >= 0 and j < N and k > i and m > k and m >= -29 - i + j + k and m < m' <= -3 - i + j + k and m' < j; S_4[i, j] -> S_4[i', j' = 1 - i + j + i'] : j > i and i' >= -1 + i and 0 <= i' <= i and i' <= -2 + N + i - j; S_4[i, j] -> S_1[i' = i, j', k = j] : i >= 0 and j > i and j < j' < N; S_4[i, j] -> S_1[i', j' = j, k = -1 + i] : i < j < N and 0 <= i' <= -2 + i; S_2[i, j, k] -> S_3[i', j' = i + j - i'] : i < k <= -2 + j and i' >= -1 + i and i' >= 0 and -N + i + j < i' <= i; S_0[i, j, k, m] -> S_4[i' = i, j' = j] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j; S_2[i, j, k] -> S_0[i', j', k' = i, m = j] : i < k <= -2 + j and 0 <= i' < i and j' > j and 3 - i + j + i' <= j' <= 29 - i + j + i' and j' < N; S_2[i, j, k] -> S_0[i' = i, j' = j, k', m] : i >= 0 and j < N and k > i and k' > k and m > k' and -29 - i + j + k' <= m < j; S_3[i, j] -> S_3[i' = -1 + i, j' = 1 + j] : i > 0 and i < j <= -2 + N; S_1[i, j, k] -> S_2[i' = -1 + i, j', k' = j] : i > 0 and i < k < j and 2 + j <= j' < N; S_1[i, j, k] -> S_2[i', j' = 1 + j, k' = -1 + i] : j <= -2 + N and i < k < j and 0 <= i' <= -2 + i; S_1[i, j, k] -> S_4[i', j'] : i < k < j and 0 <= i' <= i and j <= j' <= 1 - i + j + i' and j' < N; S_3[i, j] -> S_0[i', j', k = i, m = j] : j > i and 0 <= i' < i and j' > j and 3 - i + j + i' <= j' <= 29 - i + j + i' and j' < N; S_2[i, j, k] -> S_2[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and k < k' <= -2 + j; S_0[i, j, k, m] -> S_2[i' = i, j' = j, k'] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and k <= k' <= -2 + j }

#delta:
{ [i, j, k] : i <= 0 and ((i >= -1 and j > -i and k > 0) or (i <= -2 and 0 <= j <= 1 and k <= -2)); [i = 0, j = 0, k] : k > 0; [i, j, k, m] : i < 0 and j >= 3 + i and 0 < j <= 29 + i and k < 0 and m >= 3 + k and 0 < m <= 29 + k; [i = 0, j = 0, k, m] : 0 < k <= 27 and -26 + k <= m <= 27; [i = 0, j = 0, k = 0, m] : 0 < m <= 26; [i, j] : -1 <= i <= 0 and 0 <= j <= 1 }

#######################################################################

#######################################################################

#norm schedule map:
[N] -> { S_3[i, j] -> [-i, j, 1, 0, 0, 0]; S_2[i, j, k] -> [-i, j, 0, k, 2, 0]; S_4[i, j] -> [-i, j, 2, 0, 0, 0]; S_1[i, j, k] -> [-i, j, 0, k, 1, 0]; S_0[i, j, k, m] -> [-i, j, 0, k, 0, m] }

#######################################################################

#######################################################################

#normalized loop (0):

#mapper:
[N] -> { S_1[i, j, k] -> S_1[i0 = -i, i1 = j, i2 = 0, i3 = k, i4 = 1, i5 = j] : k <= 2 + i; S_1[i, j, k] -> S_1[i0 = -i, i1 = j, i2 = 0, i3 = k, i4 = 1, i5 = -2 - i + j + k] : k >= 2 + i; S_2[i, j, k] -> S_2[i0 = -i, i1 = j, i2 = 0, i3 = k, i4 = 2, i5 = j] : k <= 2 + i; S_2[i, j, k] -> S_2[i0 = -i, i1 = j, i2 = 0, i3 = k, i4 = 2, i5 = -2 - i + j + k] : k >= 2 + i; S_4[i, j] -> S_4[i0 = -i, i1 = j, i2 = 2, i3 = 29 + i, i4 = 0, i5 = 27 + j] : j <= 29 + i; S_4[i, j] -> S_4[i0 = -i, i1 = j, i2 = 2, i3 = j, i4 = 0, i5 = -2 - i + 2j] : j >= 29 + i; S_4[i, j = 29 + i] -> S_4[i0 = -i, i1 = 29 + i, i2 = 2, i3 = 29 + i, i4 = 0, i5 = 56 + i]; S_0[i, j, k, m] -> S_0[i0 = -i, i1 = j, i2 = 0, i3 = k, i4 = 0, i5 = m]; S_3[i, j] -> S_3[i0 = -i, i1 = j, i2 = 1, i3 = 29 + i, i4 = 0, i5 = 27 + j] : j <= 29 + i; S_3[i, j] -> S_3[i0 = -i, i1 = j, i2 = 1, i3 = j, i4 = 0, i5 = -2 - i + 2j] : j >= 29 + i }

#domain:
[N] -> { S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] : i0 <= 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N; S_4[i0, i1 = 29 - i0, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 56 - i0] : 30 - N <= i0 <= 0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] : i0 <= 0 and i1 < N and 2 - i0 <= i3 <= -2 + i1; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] : i0 <= 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] : i0 <= 0 and i1 < N and 2 - i0 <= i3 < i1 }

#schedule map:
[N] -> { S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> [i0, i1, 2, 0, 0, 0] : i1 <= 29 - i0; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> [i0, i1, 2, 0, 0, 0] : i1 >= 29 - i0; S_4[i0, i1 = 29 - i0, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 56 - i0] -> [i0, 29 - i0, 2, 0, 0, 0]; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> [i0, i1, 0, i3, 2, 0] : i3 <= 2 - i0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> [i0, i1, 0, i3, 2, 0] : i3 >= 2 - i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> [i0, i1, 0, i3, 1, 0] : i3 <= 2 - i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> [i0, i1, 0, i3, 1, 0] : i3 >= 2 - i0; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> [i0, i1, 0, i3, 0, i5]; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> [i0, i1, 1, 0, 0, 0] : i1 <= 29 - i0; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> [i0, i1, 1, 0, 0, 0] : i1 >= 29 - i0 }

#writes:
[N] -> { S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> W[-i0, i1] : i0 <= 0 and i1 >= 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> W[-i0, i1] : i0 <= 0 and i1 >= 0 and 29 - i0 <= i1 < N; S_4[i0, i1 = 29 - i0, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 56 - i0] -> W[-i0, 29 - i0] : 30 - N <= i0 <= 0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> V[-i0, i1] : i0 <= 0 and 0 <= i1 < N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> V[-i0, i1] : i0 <= 0 and 0 <= i1 < N and 2 - i0 <= i3 <= -2 + i1; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> V[-i0, i1] : i0 <= 0 and 0 <= i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> V[-i0, i1] : i0 <= 0 and i1 >= 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> V[-i0, i1] : i0 <= 0 and i1 >= 0 and 29 - i0 <= i1 < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> W[-i0, i1] : i0 <= 0 and 0 <= i1 < N and -i0 < i3 <= 2 - i0 and i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> W[-i0, i1] : i0 <= 0 and 0 <= i1 < N and 2 - i0 <= i3 < i1 }

#reads:
[N] -> { S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> W[1 - i0, i3] : i0 <= 0 and i1 < N and i3 >= 0 and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> W[1 - i0, i3] : i0 <= 0 and i1 < N and i3 >= 0 and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> W[1 + i3, -1 + i1] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> W[1 + i3, -1 + i1] : i0 <= 0 and i1 < N and 2 - i0 <= i3 <= -2 + i1; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> EFL[-i0, i1] : i0 <= 0 and 0 <= i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> V[-i0, i1] : i0 <= 0 and 0 <= i1 < N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> V[-i0, i1] : i0 <= 0 and 0 <= i1 < N and 2 - i0 <= i3 <= -2 + i1; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> V[-i0, i1] : i0 <= 0 and i1 >= 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> V[-i0, i1] : i0 <= 0 and i1 >= 0 and 29 - i0 <= i1 < N; S_4[i0, i1 = 29 - i0, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 56 - i0] -> V[-i0, 29 - i0] : 30 - N <= i0 <= 0; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> V[-i0, i1] : i0 <= 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> V[1 - i0, -1 + i1] : i0 <= 0 and i1 > 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> V[-i0, i1] : i0 <= 0 and 29 - i0 <= i1 < N; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> V[1 - i0, -1 + i1] : i0 <= 0 and i1 > 0 and 29 - i0 <= i1 < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> W[1 + i3, i1] : i0 <= 0 and 0 <= i1 < N and i3 >= -1 and -i0 < i3 <= 2 - i0 and i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> W[1 + i3, i1] : i0 <= 0 and 0 <= i1 < N and i3 >= -1 and 2 - i0 <= i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> W[-i0, i1] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> W[-i0, i3] : i0 <= 0 and i1 < N and i3 >= 0 and -i0 < i3 <= 2 - i0 and i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> W[-i0, i1] : i0 <= 0 and i1 < N and 2 - i0 <= i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> W[-i0, i3] : i0 <= 0 and i1 < N and i3 >= 0 and 2 - i0 <= i3 < i1; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> W[1 - i0, i1] : i0 <= 0 and i1 >= 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> W[1 - i0, i1] : i0 <= 0 and i1 >= 0 and 29 - i0 <= i1 < N; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> W[-i0, i1] : i0 <= 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_4[i0, i1 = 29 - i0, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 56 - i0] -> W[-i0, 28 - i0] : 30 - N <= i0 <= 0; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> W[-i0, i1] : i0 <= 0 and 29 - i0 <= i1 < N; S_4[i0, i1 = 29 - i0, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 56 - i0] -> W[-i0, 29 - i0] : 30 - N <= i0 <= 0; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> W[-i0, -1 + i1] : i0 <= 0 and i1 > 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> W[-i0, -1 + i1] : i0 <= 0 and i1 > 0 and 29 - i0 <= i1 < N; S_4[i0, i1 = 29 - i0, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 56 - i0] -> W[1 - i0, 29 - i0] : 30 - N <= i0 <= 0; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> EHF[-i0, i1] : i0 <= 0 and i1 >= 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> EHF[-i0, i1] : i0 <= 0 and i1 >= 0 and 29 - i0 <= i1 < N; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> V[-i0, i1] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> V[i3, i5] : i0 <= 0 and i1 < N and i3 >= 0 and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i5 > i3 and 0 <= i5 < i1 and i5 <= -3 + i0 + i1 + i3 }

#dep_raw:
[N] -> { S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_0[i0', i1', i2' = 0, i3' = -i0, i4' = 0, i5' = i1] : i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3 and i0 < i0' <= 0 and i1' >= 3 + i0 + i1 - i0' and i1 < i1' <= 29 + i0 + i1 - i0' and i1' < N; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3' = i3, i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i5 > i3 and i5 < i5' < i1 and i5' <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 28 - i0, i4' = 0, i5' = 28 + i1] : i0 < 0 and i1 <= 27 - i0 and i1 <= -2 + N and i3 > -i0 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and i3 > -i0 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 1 + i1, i4' = 0, i5' = 1 + i0 + 2i1] : i0 < 0 and 27 - i0 <= i1 <= -2 + N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 28 - i0, i4' = 0, i5' = 28 + i1] : i0 < 0 and -i0 < i1 <= 27 - i0 and i1 <= -2 + N; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 1 + i1, i4' = 0, i5' = 1 + i0 + 2i1] : i0 < 0 and 27 - i0 <= i1 <= 29 - i0 and i1 <= -2 + N; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 1 + i1, i4' = 0, i5' = 1 + i0 + 2i1] : i0 < 0 and 29 - i0 <= i1 <= -2 + N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = i1] : i1 < N and -i0 < i3 <= 2 - i0 and i3 < i1 and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = i1] : i1 < N and 2 - i0 <= i3 < i1 and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_1[i0' = i0, i1', i2' = 0, i3' = i1, i4' = 1, i5' = -2 + i0 + i1 + i1'] : i0 <= 0 and -i0 < i3 <= 2 - i0 and i3 < i1 and i1 < i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_1[i0' = i0, i1', i2' = 0, i3' = i1, i4' = 1, i5' = -2 + i0 + i1 + i1'] : i0 <= 0 and 2 - i0 <= i3 < i1 and i1 < i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_1[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 1, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i3' < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_1[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 1, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3 < i3' < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = -3 - i0 + i1 + i0'] : i1 < N and -i0 < i3 <= 2 - i0 and i3 < i1 and 3 + i0 <= i0' <= 0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = -3 - i0 + i1 + i0'] : i1 < N and 2 - i0 <= i3 < i1 and 3 + i0 <= i0' <= 0; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = i1] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 <= -3 + i0 + i1 + i3 and i3 <= i3' <= 2 - i0; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3 and i3' >= i3 and 2 - i0 <= i3' <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 28 - i0, i4' = 0, i5' = 28 + i1] : i0 < 0 and i1 <= 27 - i0 and i1 <= -2 + N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 28 - i0, i4' = 0, i5' = 28 + i1] : i0 < 0 and i1 <= 27 - i0 and i1 <= -2 + N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 1 + i1, i4' = 0, i5' = 1 + i0 + 2i1] : i0 < 0 and 27 - i0 <= i1 <= -2 + N and -i0 < i3 <= 2 - i0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 1 + i1, i4' = 0, i5' = 1 + i0 + 2i1] : i0 < 0 and 27 - i0 <= i1 <= -2 + N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and -i0 < i3 <= 2 - i0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and 2 - i0 <= i3 <= -2 + i1; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = i1] : -i0 < i1 <= 29 - i0 and i1 < N and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = i1] : 29 - i0 <= i1 < N and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_1[i0' = i0, i1', i2' = 0, i3' = i1, i4' = 1, i5' = i1'] : i0 <= 0 and -i0 < i1 <= 2 - i0 and i1 < i1' < N; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_1[i0' = i0, i1', i2' = 0, i3' = i1, i4' = 1, i5' = -2 + i0 + i1 + i1'] : i0 <= 0 and 2 - i0 <= i1 <= 29 - i0 and i1 < i1' < N; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_1[i0' = i0, i1', i2' = 0, i3' = i1, i4' = 1, i5' = -2 + i0 + i1 + i1'] : i0 <= 0 and i1 >= 29 - i0 and i1 < i1' < N; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = -3 - i0 + i1 + i0'] : -i0 < i1 <= 29 - i0 and i1 < N and 3 + i0 <= i0' <= 0; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = -3 - i0 + i1 + i0'] : 29 - i0 <= i1 < N and 3 + i0 <= i0' <= 0; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and i3 > -i0 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_0[i0', i1', i2' = 0, i3' = -i0, i4' = 0, i5' = i1] : -i0 < i3 <= 2 - i0 and i3 <= -2 + i1 and i0 < i0' <= 0 and i1' >= 3 + i0 + i1 - i0' and i1 < i1' <= 29 + i0 + i1 - i0' and i1' < N; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_0[i0', i1', i2' = 0, i3' = -i0, i4' = 0, i5' = i1] : 2 - i0 <= i3 <= -2 + i1 and i0 < i0' <= 0 and i1' >= 3 + i0 + i1 - i0' and i1 < i1' <= 29 + i0 + i1 - i0' and i1' < N; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_4[i0', i1' = 1 + i0 + i1 - i0', i2' = 2, i3', i4' = 0, i5'] : i3' < N and i5' <= -2 + 2i3' and ((i3' >= i1 and 29 - i0' <= i3' <= 29 - i0 and i5' >= -1 + i0 + 2i1 and 27 + i3' <= i5' <= 56 - 2i0 + i0' and i5' <= 2i0 + 2i1 - i0') or (i0' <= 0 and 29 - i0 <= i3' <= 30 - i0' and i3' <= 1 + i1 and i5' >= 2i0 + 2i1 - i0' and 56 - 2i0 + i0' <= i5' <= 28 + i3' and i5' <= i0 + 2i1)); S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_4[i0', i1' = 1 + i0 + i1 - i0', i2' = 2, i3' = 1 + i0 + i1 - i0', i4' = 0, i5' = 2i0 + 2i1 - i0'] : i1 >= 29 - i0 and i0' >= i0 and 2 - N + i0 + i1 <= i0' <= 0 and i0' <= 1 + i0; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_4[i0', i1' = 1 + i0 + i1 - i0', i2' = 2, i3' = 29 - i0', i4' = 0, i5' = 28 + i0 + i1 - i0'] : -i0 < i1 <= 28 - i0 and i0' >= i0 and 2 - N + i0 + i1 <= i0' <= 0 and i0' <= 1 + i0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and -i0 < i3 <= 2 - i0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i3' <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3 < i3' <= -2 + i1; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = 1 + i1] : -i0 < i1 <= 29 - i0 and i1 <= -2 + N and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = 1 + i1] : 29 - i0 <= i1 <= -2 + N and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_2[i0' = 1 + i0, i1', i2' = 0, i3' = i1, i4' = 2, i5' = -1 + i0 + i1 + i1'] : i0 < 0 and -i0 < i1 <= 29 - i0 and 2 + i1 <= i1' < N; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_2[i0' = 1 + i0, i1', i2' = 0, i3' = i1, i4' = 2, i5' = -1 + i0 + i1 + i1'] : i0 < 0 and i1 >= 29 - i0 and 2 + i1 <= i1' < N; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = -2 - i0 + i1 + i0'] : -i0 < i1 <= 29 - i0 and i1 <= -2 + N and 3 + i0 <= i0' <= 0; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = -2 - i0 + i1 + i0'] : 29 - i0 <= i1 <= -2 + N and 3 + i0 <= i0' <= 0; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_0[i0', i1', i2' = 0, i3' = -i0, i4' = 0, i5' = i1] : -i0 < i1 <= 29 - i0 and i0 < i0' <= 0 and i1' >= 3 + i0 + i1 - i0' and i1 < i1' <= 29 + i0 + i1 - i0' and i1' < N; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_0[i0', i1', i2' = 0, i3' = -i0, i4' = 0, i5' = i1] : i1 >= 29 - i0 and i0 < i0' <= 0 and i1' >= 3 + i0 + i1 - i0' and i1 < i1' <= 29 + i0 + i1 - i0' and i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_4[i0', i1', i2' = 2, i3' = 29 - i0', i4' = 0, i5' = 27 + i1'] : -i0 < i3 <= 2 - i0 and i3 < i1 and i0 <= i0' <= 29 - i1 and i0' <= 0 and i1 <= i1' <= 29 - i0 and i1' <= 1 + i0 + i1 - i0' and i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_4[i0', i1', i2' = 2, i3' = 29 - i0', i4' = 0, i5' = 27 + i1'] : 2 - i0 <= i3 < i1 and i0 <= i0' <= 29 - i1 and i0' <= 0 and i1 <= i1' <= 29 - i0 and i1' <= 1 + i0 + i1 - i0' and i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_4[i0', i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + 2i1 + i0'] : i1 < N and -i0 < i3 <= 2 - i0 and i0' >= i0 and 29 - i1 <= i0' <= 0 and i0' <= 1 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_4[i0', i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + 2i1 + i0'] : i1 < N and 2 - i0 <= i3 < i1 and i0' >= i0 and 29 - i1 <= i0' <= 0 and i0' <= 1 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_4[i0' = i0, i1' = 1 + i1, i2' = 2, i3' = 1 + i1, i4' = 0, i5' = i0 + 2i1] : i0 <= 0 and 28 - i0 <= i1 <= -2 + N and -i0 < i3 <= 2 - i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_4[i0' = i0, i1' = 1 + i1, i2' = 2, i3' = 1 + i1, i4' = 0, i5' = i0 + 2i1] : i0 <= 0 and 28 - i0 <= i1 <= -2 + N and 2 - i0 <= i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = 1 + i1] : i1 <= -2 + N and -i0 < i3 <= 2 - i0 and i3 < i1 and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = 1 + i1] : i1 <= -2 + N and 2 - i0 <= i3 < i1 and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_2[i0' = 1 + i0, i1', i2' = 0, i3' = i1, i4' = 2, i5' = -1 + i0 + i1 + i1'] : i0 < 0 and -i0 < i3 <= 2 - i0 and i3 < i1 and 2 + i1 <= i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_2[i0' = 1 + i0, i1', i2' = 0, i3' = i1, i4' = 2, i5' = -1 + i0 + i1 + i1'] : i0 < 0 and 2 - i0 <= i3 < i1 and 2 + i1 <= i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = -2 - i0 + i1 + i0'] : i1 <= -2 + N and -i0 < i3 <= 2 - i0 and i3 < i1 and 3 + i0 <= i0' <= 0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = -2 - i0 + i1 + i0'] : i1 <= -2 + N and 2 - i0 <= i3 < i1 and 3 + i0 <= i0' <= 0 }

#dep_waw:
[N] -> { S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3' = i3, i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i5 > i3 and i5 < i5' < i1 and i5' <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and i3 > -i0 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_1[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 1, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i3' < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_1[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 1, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3 < i3' < i1; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = i1] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 <= -3 + i0 + i1 + i3 and i3 <= i3' <= 2 - i0; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3 and i3' >= i3 and 2 - i0 <= i3' <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and -i0 < i3 <= 2 - i0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i3' <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3 < i3' <= -2 + i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and 2 - i0 <= i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and -i0 < i3 <= 2 - i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and 2 - i0 <= i3 < i1 }

#dep_war:
[N] -> { S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3' = i3, i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i5 > i3 and i5 < i5' < i1 and i5' <= -3 + i0 + i1 + i3; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_1[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 1, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i3' < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_1[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 1, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3 < i3' < i1; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and i3 > -i0 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and -i0 < i3 <= 2 - i0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and 2 - i0 <= i3 <= -2 + i1; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = i1] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 <= -3 + i0 + i1 + i3 and i3 <= i3' <= 2 - i0; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3 and i3' >= i3 and 2 - i0 <= i3' <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i3' <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3 < i3' <= -2 + i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and 2 - i0 <= i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and -i0 < i3 <= 2 - i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and 2 - i0 <= i3 < i1 }

#relations:
[N] -> { S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_0[i0', i1', i2' = 0, i3' = -i0, i4' = 0, i5' = i1] : i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3 and i0 < i0' <= 0 and i1' >= 3 + i0 + i1 - i0' and i1 < i1' <= 29 + i0 + i1 - i0' and i1' < N; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3' = i3, i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i5 > i3 and i5 < i5' < i1 and i5' <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 28 - i0, i4' = 0, i5' = 28 + i1] : i0 < 0 and i1 <= 27 - i0 and i1 <= -2 + N and i3 > -i0 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and i3 > -i0 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 1 + i1, i4' = 0, i5' = 1 + i0 + 2i1] : i0 < 0 and 27 - i0 <= i1 <= -2 + N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 28 - i0, i4' = 0, i5' = 28 + i1] : i0 < 0 and -i0 < i1 <= 27 - i0 and i1 <= -2 + N; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 1 + i1, i4' = 0, i5' = 1 + i0 + 2i1] : i0 < 0 and 27 - i0 <= i1 <= 29 - i0 and i1 <= -2 + N; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 1 + i1, i4' = 0, i5' = 1 + i0 + 2i1] : i0 < 0 and 29 - i0 <= i1 <= -2 + N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = i1] : i1 < N and -i0 < i3 <= 2 - i0 and i3 < i1 and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = i1] : i1 < N and 2 - i0 <= i3 < i1 and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_1[i0' = i0, i1', i2' = 0, i3' = i1, i4' = 1, i5' = -2 + i0 + i1 + i1'] : i0 <= 0 and -i0 < i3 <= 2 - i0 and i3 < i1 and i1 < i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_1[i0' = i0, i1', i2' = 0, i3' = i1, i4' = 1, i5' = -2 + i0 + i1 + i1'] : i0 <= 0 and 2 - i0 <= i3 < i1 and i1 < i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_1[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 1, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i3' < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_1[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 1, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3 < i3' < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = -3 - i0 + i1 + i0'] : i1 < N and -i0 < i3 <= 2 - i0 and i3 < i1 and 3 + i0 <= i0' <= 0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = -3 - i0 + i1 + i0'] : i1 < N and 2 - i0 <= i3 < i1 and 3 + i0 <= i0' <= 0; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and -i0 < i1 <= 29 - i0 and i1 < N; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = i1] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 <= -3 + i0 + i1 + i3 and i3 <= i3' <= 2 - i0; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3 and i3' >= i3 and 2 - i0 <= i3' <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 28 - i0, i4' = 0, i5' = 28 + i1] : i0 < 0 and i1 <= 27 - i0 and i1 <= -2 + N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 28 - i0, i4' = 0, i5' = 28 + i1] : i0 < 0 and i1 <= 27 - i0 and i1 <= -2 + N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 1 + i1, i4' = 0, i5' = 1 + i0 + 2i1] : i0 < 0 and 27 - i0 <= i1 <= -2 + N and -i0 < i3 <= 2 - i0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = 1 + i0, i1' = 1 + i1, i2' = 1, i3' = 1 + i1, i4' = 0, i5' = 1 + i0 + 2i1] : i0 < 0 and 27 - i0 <= i1 <= -2 + N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and -i0 < i3 <= 2 - i0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_3[i0' = i0, i1' = i1, i2' = 1, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and 2 - i0 <= i3 <= -2 + i1; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = i1] : -i0 < i1 <= 29 - i0 and i1 < N and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = i1] : 29 - i0 <= i1 < N and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_1[i0' = i0, i1', i2' = 0, i3' = i1, i4' = 1, i5' = i1'] : i0 <= 0 and -i0 < i1 <= 2 - i0 and i1 < i1' < N; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_1[i0' = i0, i1', i2' = 0, i3' = i1, i4' = 1, i5' = -2 + i0 + i1 + i1'] : i0 <= 0 and 2 - i0 <= i1 <= 29 - i0 and i1 < i1' < N; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_1[i0' = i0, i1', i2' = 0, i3' = i1, i4' = 1, i5' = -2 + i0 + i1 + i1'] : i0 <= 0 and i1 >= 29 - i0 and i1 < i1' < N; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = -3 - i0 + i1 + i0'] : -i0 < i1 <= 29 - i0 and i1 < N and 3 + i0 <= i0' <= 0; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_1[i0', i1' = i1, i2' = 0, i3' = -1 - i0, i4' = 1, i5' = -3 - i0 + i1 + i0'] : 29 - i0 <= i1 < N and 3 + i0 <= i0' <= 0; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and i3 > -i0 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_0[i0, i1, i2 = 0, i3, i4 = 0, i5] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and i3 > -i0 and i5 >= -29 + i0 + i1 + i3 and i3 < i5 < i1 and i5 <= -3 + i0 + i1 + i3; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_0[i0', i1', i2' = 0, i3' = -i0, i4' = 0, i5' = i1] : -i0 < i3 <= 2 - i0 and i3 <= -2 + i1 and i0 < i0' <= 0 and i1' >= 3 + i0 + i1 - i0' and i1 < i1' <= 29 + i0 + i1 - i0' and i1' < N; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_0[i0', i1', i2' = 0, i3' = -i0, i4' = 0, i5' = i1] : 2 - i0 <= i3 <= -2 + i1 and i0 < i0' <= 0 and i1' >= 3 + i0 + i1 - i0' and i1 < i1' <= 29 + i0 + i1 - i0' and i1' < N; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_0[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 0, i5'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3' > i3 and i5' >= -29 + i0 + i1 + i3' and i3' < i5' < i1; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_4[i0', i1' = 1 + i0 + i1 - i0', i2' = 2, i3', i4' = 0, i5'] : i3' < N and i5' <= -2 + 2i3' and ((i3' >= i1 and 29 - i0' <= i3' <= 29 - i0 and i5' >= -1 + i0 + 2i1 and 27 + i3' <= i5' <= 56 - 2i0 + i0' and i5' <= 2i0 + 2i1 - i0') or (i0' <= 0 and 29 - i0 <= i3' <= 30 - i0' and i3' <= 1 + i1 and i5' >= 2i0 + 2i1 - i0' and 56 - 2i0 + i0' <= i5' <= 28 + i3' and i5' <= i0 + 2i1)); S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_4[i0', i1' = 1 + i0 + i1 - i0', i2' = 2, i3' = 1 + i0 + i1 - i0', i4' = 0, i5' = 2i0 + 2i1 - i0'] : i1 >= 29 - i0 and i0' >= i0 and 2 - N + i0 + i1 <= i0' <= 0 and i0' <= 1 + i0; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_4[i0', i1' = 1 + i0 + i1 - i0', i2' = 2, i3' = 29 - i0', i4' = 0, i5' = 28 + i0 + i1 - i0'] : -i0 < i1 <= 28 - i0 and i0' >= i0 and 2 - N + i0 + i1 <= i0' <= 0 and i0' <= 1 + i0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = 29 - i0, i4' = 0, i5' = 27 + i1] : i0 <= 0 and i1 <= 29 - i0 and i1 < N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and -i0 < i3 <= 2 - i0; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_4[i0' = i0, i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + i0 + 2i1] : i0 <= 0 and 29 - i0 <= i1 < N and 2 - i0 <= i3 <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = i1] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and -i0 < i3 <= 2 - i0 and i3 < i3' <= -2 + i1; S_2[i0, i1, i2 = 0, i3, i4 = 2, i5 = -2 + i0 + i1 + i3] -> S_2[i0' = i0, i1' = i1, i2' = 0, i3', i4' = 2, i5' = -2 + i0 + i1 + i3'] : i0 <= 0 and i1 < N and i3 >= 2 - i0 and i3 < i3' <= -2 + i1; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = 1 + i1] : -i0 < i1 <= 29 - i0 and i1 <= -2 + N and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = 1 + i1] : 29 - i0 <= i1 <= -2 + N and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_2[i0' = 1 + i0, i1', i2' = 0, i3' = i1, i4' = 2, i5' = -1 + i0 + i1 + i1'] : i0 < 0 and -i0 < i1 <= 29 - i0 and 2 + i1 <= i1' < N; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_2[i0' = 1 + i0, i1', i2' = 0, i3' = i1, i4' = 2, i5' = -1 + i0 + i1 + i1'] : i0 < 0 and i1 >= 29 - i0 and 2 + i1 <= i1' < N; S_4[i0, i1, i2 = 2, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = -2 - i0 + i1 + i0'] : -i0 < i1 <= 29 - i0 and i1 <= -2 + N and 3 + i0 <= i0' <= 0; S_4[i0, i1, i2 = 2, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = -2 - i0 + i1 + i0'] : 29 - i0 <= i1 <= -2 + N and 3 + i0 <= i0' <= 0; S_3[i0, i1, i2 = 1, i3 = 29 - i0, i4 = 0, i5 = 27 + i1] -> S_0[i0', i1', i2' = 0, i3' = -i0, i4' = 0, i5' = i1] : -i0 < i1 <= 29 - i0 and i0 < i0' <= 0 and i1' >= 3 + i0 + i1 - i0' and i1 < i1' <= 29 + i0 + i1 - i0' and i1' < N; S_3[i0, i1, i2 = 1, i3 = i1, i4 = 0, i5 = -2 + i0 + 2i1] -> S_0[i0', i1', i2' = 0, i3' = -i0, i4' = 0, i5' = i1] : i1 >= 29 - i0 and i0 < i0' <= 0 and i1' >= 3 + i0 + i1 - i0' and i1 < i1' <= 29 + i0 + i1 - i0' and i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_4[i0', i1', i2' = 2, i3' = 29 - i0', i4' = 0, i5' = 27 + i1'] : -i0 < i3 <= 2 - i0 and i3 < i1 and i0 <= i0' <= 29 - i1 and i0' <= 0 and i1 <= i1' <= 29 - i0 and i1' <= 1 + i0 + i1 - i0' and i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_4[i0', i1', i2' = 2, i3' = 29 - i0', i4' = 0, i5' = 27 + i1'] : 2 - i0 <= i3 < i1 and i0 <= i0' <= 29 - i1 and i0' <= 0 and i1 <= i1' <= 29 - i0 and i1' <= 1 + i0 + i1 - i0' and i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_4[i0', i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + 2i1 + i0'] : i1 < N and -i0 < i3 <= 2 - i0 and i0' >= i0 and 29 - i1 <= i0' <= 0 and i0' <= 1 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_4[i0', i1' = i1, i2' = 2, i3' = i1, i4' = 0, i5' = -2 + 2i1 + i0'] : i1 < N and 2 - i0 <= i3 < i1 and i0' >= i0 and 29 - i1 <= i0' <= 0 and i0' <= 1 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_4[i0' = i0, i1' = 1 + i1, i2' = 2, i3' = 1 + i1, i4' = 0, i5' = i0 + 2i1] : i0 <= 0 and 28 - i0 <= i1 <= -2 + N and -i0 < i3 <= 2 - i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_4[i0' = i0, i1' = 1 + i1, i2' = 2, i3' = 1 + i1, i4' = 0, i5' = i0 + 2i1] : i0 <= 0 and 28 - i0 <= i1 <= -2 + N and 2 - i0 <= i3 < i1; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = 1 + i1] : i1 <= -2 + N and -i0 < i3 <= 2 - i0 and i3 < i1 and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = 1 + i1] : i1 <= -2 + N and 2 - i0 <= i3 < i1 and 2 + i0 <= i0' <= 0 and i0' <= 3 + i0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_2[i0' = 1 + i0, i1', i2' = 0, i3' = i1, i4' = 2, i5' = -1 + i0 + i1 + i1'] : i0 < 0 and -i0 < i3 <= 2 - i0 and i3 < i1 and 2 + i1 <= i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_2[i0' = 1 + i0, i1', i2' = 0, i3' = i1, i4' = 2, i5' = -1 + i0 + i1 + i1'] : i0 < 0 and 2 - i0 <= i3 < i1 and 2 + i1 <= i1' < N; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = i1] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = -2 - i0 + i1 + i0'] : i1 <= -2 + N and -i0 < i3 <= 2 - i0 and i3 < i1 and 3 + i0 <= i0' <= 0; S_1[i0, i1, i2 = 0, i3, i4 = 1, i5 = -2 + i0 + i1 + i3] -> S_2[i0', i1' = 1 + i1, i2' = 0, i3' = -1 - i0, i4' = 2, i5' = -2 - i0 + i1 + i0'] : i1 <= -2 + N and 2 - i0 <= i3 < i1 and 3 + i0 <= i0' <= 0 }

#delta:
{ [i0, i1, i2, i3, i4, i5] : i0 >= 0 and i1 >= 0 and i2 <= 3 - i0 - i1 and i2 <= 2 and i4 >= -2 + i0 - i1 and -2 - i0 + i1 <= i4 <= -3 + i2 and i5 >= -1 + i0 + i1 + i3 and 27 + i1 <= i5 <= i0 + i1 + i3; [i0, i1, i2, i3, i4, i5 = i0 + i1 + i3] : i0 >= 0 and 0 <= i1 <= 1 - i0 and i2 <= 2 and i3 <= 27 - i0 and i4 >= -2 + i0 and i4 >= -2 + i1 and i4 >= -i3 and -i0 + i1 - i3 <= i4 <= -3 + i2; [i0, i1 = 0, i2, i3, i4, i5 = i0 + i3] : i0 >= 0 and i2 <= 2 and i4 >= -2 + i0 and -i3 <= i4 <= -3 + i2; [i0, i1, i2 = 0, i3, i4 = i0, i5] : 0 <= i0 <= 1 and i1 > i0 and i3 > 0 and -1 + i0 + i1 + i3 <= i5 <= i0 + i1 + i3; [i0, i1, i2 = 1 - i0 - i1, i3, i4 = 0, i5] : i1 <= 1 - i0 and i3 >= -i0 and i5 >= i1 and 2i3 <= i5 <= 2 - i0 + i3 and i5 <= 1 + i0 + i3 and i5 <= i0 + 2i1 and 2i5 >= i0 + 2i3; [i0, i1, i2 = 0, i3, i4 = 0, i5] : i5 > 0 and ((i0 > 0 and i1 > 0 and 3 - i0 <= i1 <= 29 - i0 and i3 < 0 and 3 + i3 <= i5 <= 29 + i3) or (i0 <= 1 and -i0 - i1 < i3 <= i1 and -1 + i0 + 2i1 + i3 <= i5 <= 4 - i0 - i1 + i3 and 2i5 <= 3i0 + 3i1 + i3)); [i0 = 0, i1 = 1, i2 = 2, i3, i4 = -1, i5 = 1 + i3] : i3 >= 2; [i0, i1, i2 = -2, i3, i4 = 1 + i1, i5 = 3 + i1 + i3] : 2 <= i0 <= 3 and 0 <= i1 <= 1 and i3 <= -30; [i0, i1, i2 = 0, i3, i4 = i1, i5 = 3 + i1 + i3] : 2 <= i0 <= 3 and 0 <= i1 <= 1 and i3 <= -3; [i0, i1, i2 = -1, i3, i4 = 0, i5 = 2 + i3] : i0 > 0 and i1 > 0 and 3 - i0 <= i1 <= 29 - i0 and i3 <= -29; [i0, i1, i2 = 0, i3, i4 = -2, i5 = 2 + i3] : i0 > 0 and i1 > 0 and 3 - i0 <= i1 <= 29 - i0 and i3 <= -2; [i0, i1, i2 = -2, i3, i4 = 1 + i1, i5 = i0 + i1 + i3] : i0 >= 3 and 0 <= i1 <= 1 and i3 <= -30; [i0, i1, i2 = 0, i3, i4 = i1, i5 = i0 + i1 + i3] : i0 >= 3 and 0 <= i1 <= 1 and i3 <= -3; [i0, i1, i2 = 0, i3, i4 = i1, i5 = i1] : 2 <= i0 <= 3 and 0 <= i1 <= 1 and -3 <= i3 <= -2; [i0, i1, i2 = 0, i3, i4 = -2, i5 = 0] : i0 > 0 and i1 > 0 and 3 - i0 <= i1 <= 29 - i0 and -2 <= i3 < 0; [i0 = 0, i1 = 0, i2, i3, i4 = 0, i5] : 0 < i2 <= 2 and i3 >= 2 and i5 > i3 and 28 <= i5 <= 27 + i3; [i0, i1, i2 = 0, i3, i4 = i1, i5 = -3 + i0 + i1] : i0 >= 3 and 0 <= i1 <= 1 and -3 <= i3 <= -2; [i0 = 0, i1 = 0, i2 = 0, i3, i4 = 2, i5] : i3 >= 0 and i5 > i3 and ((i3 <= 1 and i5 <= 28) or i5 <= 27 + i3); [i0, i1 = i0, i2 = 1 - i0, i3 = -i0, i4 = 0, i5 = i0] : 0 <= i0 <= 1; [i0 = 1, i1, i2 = -2, i3, i4 = 2, i5 = 1 + i1 + i3] : i1 >= 2 and -28 <= i3 <= 0; [i0 = 0, i1, i2 = -2, i3, i4 = 1, i5 = i1 + i3] : i1 > 0 and -27 <= i3 <= 0; [i0 = 1, i1 = 1, i2 = 1, i3, i4 = 0, i5] : i3 >= 3 and i5 >= 3 + i3 and 29 <= i5 <= 29 + i3; [i0 = 0, i1 = 0, i2 = 0, i3, i4 = 0, i5] : i3 > 0 and i5 >= -26 + i3 and ((i3 <= 27 and i5 <= 27) or (-1 + i3 <= i5 <= i3)); [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5] : 0 < i5 <= 26; [i0 = 0, i1 = 0, i2 = 0, i3, i4 = -2, i5] : i3 > 0 and -28 + i3 <= i5 < 0; [i0 = 0, i1, i2 = -2, i3, i4 = 1, i5 = -27 + i1] : i1 > 0 and -28 <= i3 <= -27; [i0 = 1, i1 = 1, i2 = 1, i3, i4 = -2, i5 = 2 + i3] : i3 >= 3 }

#######################################################################

#######################################################################

#normalized loop (0):

#loop tile start

#dim info analyze start

#dim info analyze stop

#delta analyze start

#distance vector set : { [i0 = 1, i1 = 1, i2 = 1, i3 = 27, i4 = -2, i5 = 29] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 1, i3 = 27, i4 = -2, i5 = 28] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 1, i3 = 26, i4 = -2, i5 = 28] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 2, i3 = 27, i4 = -1, i5 = 28] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 2, i3 = 27, i4 = -1, i5 = 27] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 2, i3 = 26, i4 = -1, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 2, i3 = 28, i4 = -1, i5 = 29] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 2, i3 = 28, i4 = -1, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 2, i3 = 27, i4 = -1, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 28, i4 = -1, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 28, i4 = -1, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 28, i4 = -2, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 28, i4 = -2, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 27, i4 = -1, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 27, i4 = -2, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 28, i4 = -2, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 28, i4 = -2, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 27, i4 = -2, i5 = 27] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 2, i3 = 26, i4 = -1, i5 = 27] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 2, i3 = 1, i4 = -1, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 2, i3 = 27, i4 = -1, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 2, i3 = 2, i4 = -1, i5 = 3] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 27, i4 = -1, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 27, i4 = -2, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 1, i4 = -1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 27, i4 = -2, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 2, i4 = -2, i5 = 2] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 2, i3 = 2, i4 = -1, i5 = 3] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 2, i3 = 1, i4 = -1, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 2, i4 = -1, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 2, i4 = -2, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 1, i4 = -1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 3, i4 = -2, i5 = 3] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 2, i4 = -2, i5 = 2] }

#distance vector set : { [i0 = 1, i1 = 3, i2 = 0, i3 = 2, i4 = 1, i5 = 6] }

#distance vector set : { [i0 = 1, i1 = 3, i2 = 0, i3 = 2, i4 = 1, i5 = 5] }

#distance vector set : { [i0 = 1, i1 = 3, i2 = 0, i3 = 1, i4 = 1, i5 = 5] }

#distance vector set : { [i0 = 1, i1 = 3, i2 = 0, i3 = 1, i4 = 1, i5 = 4] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = 0, i3 = 2, i4 = 1, i5 = 5] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = 0, i3 = 2, i4 = 1, i5 = 4] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = 0, i3 = 1, i4 = 1, i5 = 4] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = 0, i3 = 1, i4 = 1, i5 = 3] }

#distance vector set : { [i0 = 0, i1 = 2, i2 = 0, i3 = 2, i4 = 0, i5 = 4] }

#distance vector set : { [i0 = 0, i1 = 2, i2 = 0, i3 = 2, i4 = 0, i5 = 3] }

#distance vector set : { [i0 = 0, i1 = 2, i2 = 0, i3 = 1, i4 = 0, i5 = 3] }

#distance vector set : { [i0 = 0, i1 = 2, i2 = 0, i3 = 1, i4 = 0, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 2, i4 = 0, i5 = 3] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 2, i4 = 0, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 1, i4 = 0, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 1, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 1, i4 = 0, i5 = 3] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = 0, i4 = 0, i5 = 2] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -1, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 1, i4 = 0, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 0, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 0, i2 = 0, i3 = -1, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 1, i4 = 0, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 0, i3 = 0, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 28, i1 = 1, i2 = 0, i3 = -1, i4 = 0, i5 = 28] }

#distance vector set : { [i0 = 28, i1 = 1, i2 = 0, i3 = -1, i4 = 0, i5 = 2] }

#distance vector set : { [i0 = 28, i1 = 1, i2 = 0, i3 = -28, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 28, i2 = 0, i3 = -1, i4 = 0, i5 = 28] }

#distance vector set : { [i0 = 1, i1 = 28, i2 = 0, i3 = -1, i4 = 0, i5 = 2] }

#distance vector set : { [i0 = 1, i1 = 28, i2 = 0, i3 = -28, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = 0, i3 = -1, i4 = 0, i5 = 28] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = 0, i3 = -1, i4 = 0, i5 = 2] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = 0, i3 = -28, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 4, i1 = 1, i2 = -2, i3 = -30, i4 = 2, i5 = -25] }

#distance vector set : { [i0 = 4, i1 = 1, i2 = -2, i3 = -31, i4 = 2, i5 = -26] }

#distance vector set : { [i0 = 4, i1 = 0, i2 = -2, i3 = -30, i4 = 1, i5 = -26] }

#distance vector set : { [i0 = 4, i1 = 0, i2 = -2, i3 = -31, i4 = 1, i5 = -27] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = -2, i3 = -30, i4 = 2, i5 = -26] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = -2, i3 = -31, i4 = 2, i5 = -27] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = -2, i3 = -30, i4 = 1, i5 = -27] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = -2, i3 = -31, i4 = 1, i5 = -28] }

#distance vector set : { [i0 = 4, i1 = 1, i2 = 0, i3 = -3, i4 = 1, i5 = 2] }

#distance vector set : { [i0 = 4, i1 = 1, i2 = 0, i3 = -4, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 4, i1 = 0, i2 = 0, i3 = -3, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 4, i1 = 0, i2 = 0, i3 = -4, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = 0, i3 = -3, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = 0, i3 = -4, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = 0, i3 = -3, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = 0, i3 = -4, i4 = 0, i5 = -1] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = -2, i3 = -30, i4 = 2, i5 = -26] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = -2, i3 = -31, i4 = 2, i5 = -27] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = -2, i3 = -30, i4 = 1, i5 = -27] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = -2, i3 = -31, i4 = 1, i5 = -28] }

#distance vector set : { [i0 = 2, i1 = 1, i2 = -2, i3 = -30, i4 = 2, i5 = -26] }

#distance vector set : { [i0 = 2, i1 = 1, i2 = -2, i3 = -31, i4 = 2, i5 = -27] }

#distance vector set : { [i0 = 2, i1 = 0, i2 = -2, i3 = -30, i4 = 1, i5 = -27] }

#distance vector set : { [i0 = 2, i1 = 0, i2 = -2, i3 = -31, i4 = 1, i5 = -28] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = 0, i3 = -3, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = 0, i3 = -4, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = 0, i3 = -3, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = 0, i3 = -4, i4 = 0, i5 = -1] }

#distance vector set : { [i0 = 2, i1 = 1, i2 = 0, i3 = -3, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 2, i1 = 1, i2 = 0, i3 = -4, i4 = 1, i5 = 0] }

#distance vector set : { [i0 = 2, i1 = 0, i2 = 0, i3 = -3, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 2, i1 = 0, i2 = 0, i3 = -4, i4 = 0, i5 = -1] }

#distance vector set : { [i0 = 28, i1 = 1, i2 = -1, i3 = -29, i4 = 0, i5 = -27] }

#distance vector set : { [i0 = 28, i1 = 1, i2 = -1, i3 = -30, i4 = 0, i5 = -28] }

#distance vector set : { [i0 = 1, i1 = 28, i2 = -1, i3 = -29, i4 = 0, i5 = -27] }

#distance vector set : { [i0 = 1, i1 = 28, i2 = -1, i3 = -30, i4 = 0, i5 = -28] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = -1, i3 = -29, i4 = 0, i5 = -27] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = -1, i3 = -30, i4 = 0, i5 = -28] }

#distance vector set : { [i0 = 28, i1 = 1, i2 = 0, i3 = -2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 28, i1 = 1, i2 = 0, i3 = -3, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 28, i2 = 0, i3 = -2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 28, i2 = 0, i3 = -3, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = 0, i3 = -2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = 0, i3 = -3, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 4, i1 = 1, i2 = 0, i3 = -2, i4 = 1, i5 = 2] }

#distance vector set : { [i0 = 4, i1 = 1, i2 = 0, i3 = -3, i4 = 1, i5 = 2] }

#distance vector set : { [i0 = 4, i1 = 0, i2 = 0, i3 = -2, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 4, i1 = 0, i2 = 0, i3 = -3, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = 0, i3 = -2, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = 0, i3 = -3, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = 0, i3 = -2, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = 0, i3 = -3, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = 0, i3 = -2, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 3, i1 = 1, i2 = 0, i3 = -3, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = 0, i3 = -2, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 3, i1 = 0, i2 = 0, i3 = -3, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 2, i1 = 1, i2 = 0, i3 = -2, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 2, i1 = 1, i2 = 0, i3 = -3, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 2, i1 = 0, i2 = 0, i3 = -2, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 2, i1 = 0, i2 = 0, i3 = -3, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 28, i1 = 1, i2 = 0, i3 = -1, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 28, i1 = 1, i2 = 0, i3 = -2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 28, i2 = 0, i3 = -1, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 28, i2 = 0, i3 = -2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = 0, i3 = -1, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = 0, i3 = -2, i4 = -2, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 3, i4 = 0, i5 = 30] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 3, i4 = 0, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 2, i4 = 0, i5 = 29] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 2, i3 = 2, i4 = 0, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 3, i4 = 0, i5 = 30] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 3, i4 = 0, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 2, i4 = 0, i5 = 29] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 2, i4 = 0, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = 2, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = 2, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 2, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 3, i2 = -2, i3 = 0, i4 = 2, i5 = 4] }

#distance vector set : { [i0 = 1, i1 = 3, i2 = -2, i3 = -28, i4 = 2, i5 = -24] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = -2, i3 = 0, i4 = 2, i5 = 3] }

#distance vector set : { [i0 = 1, i1 = 2, i2 = -2, i3 = -28, i4 = 2, i5 = -25] }

#distance vector set : { [i0 = 0, i1 = 2, i2 = -2, i3 = 0, i4 = 1, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 2, i2 = -2, i3 = -27, i4 = 1, i5 = -25] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = -2, i3 = 0, i4 = 1, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = -2, i3 = -27, i4 = 1, i5 = -26] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = 0, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 2, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 27, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = -2, i5 = -1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = -2, i5 = -27] }

#distance vector set : { [i0 = 0, i1 = 2, i2 = -2, i3 = -27, i4 = 1, i5 = -25] }

#distance vector set : { [i0 = 0, i1 = 2, i2 = -2, i3 = -28, i4 = 1, i5 = -25] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = -2, i3 = -27, i4 = 1, i5 = -26] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = -2, i3 = -28, i4 = 1, i5 = -26] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = 2, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = 2, i5 = 2] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 2, i5 = 28] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 2, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 1, i3 = 4, i4 = 0, i5 = 33] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 1, i3 = 4, i4 = 0, i5 = 29] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 1, i3 = 3, i4 = 0, i5 = 32] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 1, i3 = 3, i4 = 0, i5 = 29] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 27, i4 = 0, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 27, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = 0, i5 = 27] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 1, i4 = 0, i5 = -25] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 2, i3 = 3, i4 = -1, i5 = 4] }

#distance vector set : { [i0 = 0, i1 = 1, i2 = 2, i3 = 2, i4 = -1, i5 = 3] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 0, i3 = -1, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 1, i3 = 0, i4 = 0, i5 = 0] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 26] }

#distance vector set : { [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 1] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 1, i3 = 4, i4 = -2, i5 = 6] }

#distance vector set : { [i0 = 1, i1 = 1, i2 = 1, i3 = 3, i4 = -2, i5 = 5] }

#delta:
{ [i0, i1, i2, i3, i4, i5] : i0 >= 0 and i1 >= 0 and i2 <= 3 - i0 - i1 and i2 <= 2 and i4 >= -2 + i0 - i1 and -2 - i0 + i1 <= i4 <= -3 + i2 and i5 >= -1 + i0 + i1 + i3 and 27 + i1 <= i5 <= i0 + i1 + i3; [i0, i1, i2, i3, i4, i5 = i0 + i1 + i3] : i0 >= 0 and 0 <= i1 <= 1 - i0 and i2 <= 2 and i3 <= 27 - i0 and i4 >= -2 + i0 and i4 >= -2 + i1 and i4 >= -i3 and -i0 + i1 - i3 <= i4 <= -3 + i2; [i0, i1 = 0, i2, i3, i4, i5 = i0 + i3] : i0 >= 0 and i2 <= 2 and i4 >= -2 + i0 and -i3 <= i4 <= -3 + i2; [i0, i1, i2 = 0, i3, i4 = i0, i5] : 0 <= i0 <= 1 and i1 > i0 and i3 > 0 and -1 + i0 + i1 + i3 <= i5 <= i0 + i1 + i3; [i0, i1, i2 = 1 - i0 - i1, i3, i4 = 0, i5] : i1 <= 1 - i0 and i3 >= -i0 and i5 >= i1 and 2i3 <= i5 <= 2 - i0 + i3 and i5 <= 1 + i0 + i3 and i5 <= i0 + 2i1 and 2i5 >= i0 + 2i3; [i0, i1, i2 = 0, i3, i4 = 0, i5] : i5 > 0 and ((i0 <= 1 and -i0 - i1 < i3 <= i1 and -1 + i0 + 2i1 + i3 <= i5 <= 4 - i0 - i1 + i3 and 2i5 <= 3i0 + 3i1 + i3) or (i0 > 0 and i1 > 0 and 3 - i0 <= i1 <= 29 - i0 and i3 < 0 and 3 + i3 <= i5 <= 29 + i3)); [i0 = 0, i1 = 1, i2 = 2, i3, i4 = -1, i5 = 1 + i3] : i3 >= 2; [i0, i1, i2 = -2, i3, i4 = 1 + i1, i5 = 3 + i1 + i3] : 2 <= i0 <= 3 and 0 <= i1 <= 1 and i3 <= -30; [i0, i1, i2 = 0, i3, i4 = i1, i5 = 3 + i1 + i3] : 2 <= i0 <= 3 and 0 <= i1 <= 1 and i3 <= -3; [i0, i1, i2 = -1, i3, i4 = 0, i5 = 2 + i3] : i0 > 0 and i1 > 0 and 3 - i0 <= i1 <= 29 - i0 and i3 <= -29; [i0, i1, i2 = 0, i3, i4 = -2, i5 = 2 + i3] : i0 > 0 and i1 > 0 and 3 - i0 <= i1 <= 29 - i0 and i3 <= -2; [i0, i1, i2 = -2, i3, i4 = 1 + i1, i5 = i0 + i1 + i3] : i0 >= 3 and 0 <= i1 <= 1 and i3 <= -30; [i0, i1, i2 = 0, i3, i4 = i1, i5 = i0 + i1 + i3] : i0 >= 3 and 0 <= i1 <= 1 and i3 <= -3; [i0, i1, i2 = 0, i3, i4 = i1, i5 = i1] : 2 <= i0 <= 3 and 0 <= i1 <= 1 and -3 <= i3 <= -2; [i0, i1, i2 = 0, i3, i4 = -2, i5 = 0] : i0 > 0 and i1 > 0 and 3 - i0 <= i1 <= 29 - i0 and -2 <= i3 < 0; [i0 = 0, i1 = 0, i2, i3, i4 = 0, i5] : 0 < i2 <= 2 and i3 >= 2 and i5 > i3 and 28 <= i5 <= 27 + i3; [i0, i1, i2 = 0, i3, i4 = i1, i5 = -3 + i0 + i1] : i0 >= 3 and 0 <= i1 <= 1 and -3 <= i3 <= -2; [i0 = 0, i1 = 0, i2 = 0, i3, i4 = 2, i5] : i3 >= 0 and i5 > i3 and (i5 <= 27 + i3 or (i3 <= 1 and i5 <= 28)); [i0, i1 = i0, i2 = 1 - i0, i3 = -i0, i4 = 0, i5 = i0] : 0 <= i0 <= 1; [i0 = 1, i1, i2 = -2, i3, i4 = 2, i5 = 1 + i1 + i3] : i1 >= 2 and -28 <= i3 <= 0; [i0 = 0, i1, i2 = -2, i3, i4 = 1, i5 = i1 + i3] : i1 > 0 and -27 <= i3 <= 0; [i0 = 1, i1 = 1, i2 = 1, i3, i4 = 0, i5] : i3 >= 3 and i5 >= 3 + i3 and 29 <= i5 <= 29 + i3; [i0 = 0, i1 = 0, i2 = 0, i3, i4 = 0, i5] : i3 > 0 and i5 >= -26 + i3 and ((-1 + i3 <= i5 <= i3) or (i3 <= 27 and i5 <= 27)); [i0 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5] : 0 < i5 <= 26; [i0 = 0, i1 = 0, i2 = 0, i3, i4 = -2, i5] : i3 > 0 and -28 + i3 <= i5 < 0; [i0 = 0, i1, i2 = -2, i3, i4 = 1, i5 = -27 + i1] : i1 > 0 and -28 <= i3 <= -27; [i0 = 1, i1 = 1, i2 = 1, i3, i4 = -2, i5 = 2 + i3] : i3 >= 3 }

#dim [i0]: is parameter, is positive

#dim [i1]: is parameter, is positive

#dim [i2]: is order

#dim [i3]: is parameter, is negative, is positive

#dim [i4]: is order

#dim [i5]: is bounded

#delta analyze stop

#create tile equations start

#tile equations: {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a2 >= 0  and a4 <= 0  and a4 >= 0  and ( 1 = 0  or a1 != 0  or a2 != 0  or a4 != 0  or a6 != 0  )  and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 33*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 32*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 30*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 30*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 29*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 29*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 28*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 26*a4 + -2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 27*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 26*a4 + -1*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 27*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 26*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 6*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + -2*a5 + 6*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 3*a2 + -2*a3 + 0*a4 + 2*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 4*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 4*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 3*a4 + -1*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + -2*a3 + 0*a4 + 2*a5 + 3*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 3*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + -2*a5 + 3*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 2*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + 0*a4 + 1*a5 + 2*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 2*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 2*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 2*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -2*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + -2*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 1*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 1*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 0*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 3*a2 + -2*a3 + -28*a4 + 2*a5 + -24*a6 >= 0 and 1*a1 + 2*a2 + -2*a3 + -28*a4 + 2*a5 + -25*a6 >= 0 and 4*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -25*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + -27*a4 + 1*a5 + -25*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + -28*a4 + 1*a5 + -25*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + -25*a6 >= 0 and 3*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 >= 0 and 2*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 >= 0 and 4*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -26*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + -27*a4 + 1*a5 + -26*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + -28*a4 + 1*a5 + -26*a6 >= 0 and 4*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -26*a6 >= 0 and 3*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 >= 0 and 2*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 >= 0 and 3*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 >= 0 and 2*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 >= 0 and 4*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -27*a6 >= 0 and 1*a1 + 28*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 1*a1 + 2*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 28*a1 + 1*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -27*a6 >= 0 and 3*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 >= 0 and 2*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 >= 0 and 1*a1 + 28*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 1*a1 + 2*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 28*a1 + 1*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + -2*a5 + 5*a6 >= 0 }

#parallel free equation: {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a2 >= 0  and a4 <= 0  and a4 >= 0  and ( 1 = 0  or a1 != 0  or a2 != 0  or a4 != 0  or a6 != 0  )  and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 33*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 32*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 30*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 30*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 29*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 29*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 28*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 26*a4 + -2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 27*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 26*a4 + -1*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 27*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 26*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 6*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + -2*a5 + 6*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 3*a2 + -2*a3 + 0*a4 + 2*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 4*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 4*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 3*a4 + -1*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + -2*a3 + 0*a4 + 2*a5 + 3*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 3*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + -2*a5 + 3*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 2*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + 0*a4 + 1*a5 + 2*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 2*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 2*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 2*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -2*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + -2*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 1*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 1*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 0*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 3*a2 + -2*a3 + -28*a4 + 2*a5 + -24*a6 = 0 and 1*a1 + 2*a2 + -2*a3 + -28*a4 + 2*a5 + -25*a6 = 0 and 4*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -25*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + -27*a4 + 1*a5 + -25*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + -28*a4 + 1*a5 + -25*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + -25*a6 = 0 and 3*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 = 0 and 2*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 = 0 and 4*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -26*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + -27*a4 + 1*a5 + -26*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + -28*a4 + 1*a5 + -26*a6 = 0 and 4*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -26*a6 = 0 and 3*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 = 0 and 2*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 = 0 and 3*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 = 0 and 2*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 = 0 and 4*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -27*a6 = 0 and 1*a1 + 28*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 1*a1 + 2*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 28*a1 + 1*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -27*a6 = 0 and 3*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 = 0 and 2*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 = 0 and 1*a1 + 28*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 1*a1 + 2*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 28*a1 + 1*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + -2*a5 + 5*a6 = 0 }

#create tile equations stop

#create hyperplanes start

#hyperplane for dim parallel free: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a1 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a2 >= 0  and a4 <= 0  and a4 >= 0  and ( 1 = 0  or a1 != 0  or a2 != 0  or a4 != 0  or a6 != 0  )  and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 33*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 32*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 30*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 30*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 29*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 29*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 28*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 26*a4 + -2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 27*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 26*a4 + -1*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 27*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 26*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 6*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + -2*a5 + 6*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 3*a2 + -2*a3 + 0*a4 + 2*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 4*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 4*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 3*a4 + -1*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + -2*a3 + 0*a4 + 2*a5 + 3*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 3*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + -2*a5 + 3*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 2*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + 0*a4 + 1*a5 + 2*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 2*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 2*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 2*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -2*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + -2*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 1*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 1*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 0*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 3*a2 + -2*a3 + -28*a4 + 2*a5 + -24*a6 = 0 and 1*a1 + 2*a2 + -2*a3 + -28*a4 + 2*a5 + -25*a6 = 0 and 4*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -25*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + -27*a4 + 1*a5 + -25*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + -28*a4 + 1*a5 + -25*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + -25*a6 = 0 and 3*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 = 0 and 2*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 = 0 and 4*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -26*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + -27*a4 + 1*a5 + -26*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + -28*a4 + 1*a5 + -26*a6 = 0 and 4*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -26*a6 = 0 and 3*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 = 0 and 2*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 = 0 and 3*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 = 0 and 2*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 = 0 and 4*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -27*a6 = 0 and 1*a1 + 28*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 1*a1 + 2*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 28*a1 + 1*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -27*a6 = 0 and 3*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 = 0 and 2*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 = 0 and 1*a1 + 28*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 1*a1 + 2*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 28*a1 + 1*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + -2*a5 + 5*a6 = 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#hyperplane for dim parallel free: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a2 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a2 >= 0  and a4 <= 0  and a4 >= 0  and ( 1 = 0  or a1 != 0  or a2 != 0  or a4 != 0  or a6 != 0  )  and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 33*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 32*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 30*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 30*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 29*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 29*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 28*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 26*a4 + -2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 27*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 26*a4 + -1*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 27*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 26*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 6*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + -2*a5 + 6*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 3*a2 + -2*a3 + 0*a4 + 2*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 4*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 4*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 3*a4 + -1*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + -2*a3 + 0*a4 + 2*a5 + 3*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 3*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + -2*a5 + 3*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 2*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + 0*a4 + 1*a5 + 2*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 2*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 2*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 2*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -2*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + -2*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 1*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 1*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 0*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 3*a2 + -2*a3 + -28*a4 + 2*a5 + -24*a6 = 0 and 1*a1 + 2*a2 + -2*a3 + -28*a4 + 2*a5 + -25*a6 = 0 and 4*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -25*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + -27*a4 + 1*a5 + -25*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + -28*a4 + 1*a5 + -25*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + -25*a6 = 0 and 3*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 = 0 and 2*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 = 0 and 4*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -26*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + -27*a4 + 1*a5 + -26*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + -28*a4 + 1*a5 + -26*a6 = 0 and 4*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -26*a6 = 0 and 3*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 = 0 and 2*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 = 0 and 3*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 = 0 and 2*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 = 0 and 4*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -27*a6 = 0 and 1*a1 + 28*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 1*a1 + 2*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 28*a1 + 1*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -27*a6 = 0 and 3*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 = 0 and 2*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 = 0 and 1*a1 + 28*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 1*a1 + 2*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 28*a1 + 1*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + -2*a5 + 5*a6 = 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#hyperplane for dim parallel free: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a4 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a2 >= 0  and a4 <= 0  and a4 >= 0  and ( 1 = 0  or a1 != 0  or a2 != 0  or a4 != 0  or a6 != 0  )  and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 33*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 32*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 30*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 30*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 29*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 29*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 28*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 26*a4 + -2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 27*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 26*a4 + -1*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 27*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 26*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 6*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + -2*a5 + 6*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 3*a2 + -2*a3 + 0*a4 + 2*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 4*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 4*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 3*a4 + -1*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + -2*a3 + 0*a4 + 2*a5 + 3*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 3*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + -2*a5 + 3*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 2*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + 0*a4 + 1*a5 + 2*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 2*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 2*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 2*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -2*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + -2*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 1*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 1*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 0*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 3*a2 + -2*a3 + -28*a4 + 2*a5 + -24*a6 = 0 and 1*a1 + 2*a2 + -2*a3 + -28*a4 + 2*a5 + -25*a6 = 0 and 4*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -25*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + -27*a4 + 1*a5 + -25*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + -28*a4 + 1*a5 + -25*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + -25*a6 = 0 and 3*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 = 0 and 2*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 = 0 and 4*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -26*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + -27*a4 + 1*a5 + -26*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + -28*a4 + 1*a5 + -26*a6 = 0 and 4*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -26*a6 = 0 and 3*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 = 0 and 2*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 = 0 and 3*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 = 0 and 2*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 = 0 and 4*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -27*a6 = 0 and 1*a1 + 28*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 1*a1 + 2*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 28*a1 + 1*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -27*a6 = 0 and 3*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 = 0 and 2*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 = 0 and 1*a1 + 28*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 1*a1 + 2*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 28*a1 + 1*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + -2*a5 + 5*a6 = 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#hyperplane for dim parallel free: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a6 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a2 >= 0  and a4 <= 0  and a4 >= 0  and ( 1 = 0  or a1 != 0  or a2 != 0  or a4 != 0  or a6 != 0  )  and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 33*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 32*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 30*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 30*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 29*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 29*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 29*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 29*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 28*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 26*a4 + -2*a5 + 28*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 27*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 26*a4 + -1*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 27*a4 + -2*a5 + 27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 26*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 6*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + -2*a5 + 6*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 5*a6 = 0 and 1*a1 + 3*a2 + -2*a3 + 0*a4 + 2*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 4*a6 = 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 4*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 3*a4 + -1*a5 + 4*a6 = 0 and 1*a1 + 2*a2 + -2*a3 + 0*a4 + 2*a5 + 3*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 3*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 = 0 and 0*a1 + 1*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + -2*a5 + 3*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 2*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + 0*a4 + 1*a5 + 2*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 2*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 2*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 2*a6 = 0 and 1*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -2*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + -2*a5 + 2*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + 0*a4 + 1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 = 0 and 4*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 1*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 1*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 = 0 and 0*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 1*a6 = 0 and 3*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 = 0 and 2*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 0*a6 = 0 and 0*a1 + 0*a2 + 1*a3 + 0*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 0*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 = 0 and 4*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + 0*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 = 0 and 3*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 = 0 and 2*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + -2*a5 + -1*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 28*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 2*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 28*a1 + 1*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 = 0 and 1*a1 + 3*a2 + -2*a3 + -28*a4 + 2*a5 + -24*a6 = 0 and 1*a1 + 2*a2 + -2*a3 + -28*a4 + 2*a5 + -25*a6 = 0 and 4*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -25*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + -27*a4 + 1*a5 + -25*a6 = 0 and 0*a1 + 2*a2 + -2*a3 + -28*a4 + 1*a5 + -25*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + -25*a6 = 0 and 3*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 = 0 and 2*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 = 0 and 4*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -26*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + -27*a4 + 1*a5 + -26*a6 = 0 and 0*a1 + 1*a2 + -2*a3 + -28*a4 + 1*a5 + -26*a6 = 0 and 4*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -26*a6 = 0 and 3*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 = 0 and 2*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 = 0 and 3*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 = 0 and 2*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 = 0 and 4*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -27*a6 = 0 and 1*a1 + 28*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 1*a1 + 2*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 28*a1 + 1*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 = 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -27*a6 = 0 and 3*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 = 0 and 2*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 = 0 and 1*a1 + 28*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 1*a1 + 2*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 28*a1 + 1*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 = 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + -2*a5 + 5*a6 = 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#hyperplane for dim: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a1 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a2 >= 0  and a4 <= 0  and a4 >= 0  and ( 1 = 0  or a1 != 0  or a2 != 0  or a4 != 0  or a6 != 0  )  and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 33*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 32*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 30*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 30*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 29*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 29*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 28*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 26*a4 + -2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 27*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 26*a4 + -1*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 27*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 26*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 6*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + -2*a5 + 6*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 3*a2 + -2*a3 + 0*a4 + 2*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 4*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 4*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 3*a4 + -1*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + -2*a3 + 0*a4 + 2*a5 + 3*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 3*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + -2*a5 + 3*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 2*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + 0*a4 + 1*a5 + 2*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 2*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 2*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 2*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -2*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + -2*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 1*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 1*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 0*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 3*a2 + -2*a3 + -28*a4 + 2*a5 + -24*a6 >= 0 and 1*a1 + 2*a2 + -2*a3 + -28*a4 + 2*a5 + -25*a6 >= 0 and 4*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -25*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + -27*a4 + 1*a5 + -25*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + -28*a4 + 1*a5 + -25*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + -25*a6 >= 0 and 3*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 >= 0 and 2*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 >= 0 and 4*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -26*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + -27*a4 + 1*a5 + -26*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + -28*a4 + 1*a5 + -26*a6 >= 0 and 4*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -26*a6 >= 0 and 3*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 >= 0 and 2*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 >= 0 and 3*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 >= 0 and 2*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 >= 0 and 4*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -27*a6 >= 0 and 1*a1 + 28*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 1*a1 + 2*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 28*a1 + 1*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -27*a6 >= 0 and 3*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 >= 0 and 2*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 >= 0 and 1*a1 + 28*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 1*a1 + 2*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 28*a1 + 1*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + -2*a5 + 5*a6 >= 0 } )

#result: { [d0 = 0, b0 = 1, c0 = -6, a1 = 1, a2 = 0, a3 = 0, a4 = 0, a5 = 0, a6 = 0] }

#hyperplane: { [a1 = 1, a2 = 0, a3 = 0, a4 = 0, a5 = 0, a6 = 0] }

#hyperplane check: first hyperplane 

#result: true

#hyperplane for dim: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a2 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a2 >= 0  and a4 <= 0  and a4 >= 0  and ( 1 = 0  or a1 != 0  or a2 != 0  or a4 != 0  or a6 != 0  )  and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 33*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 32*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 30*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 30*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 29*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 29*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 28*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 26*a4 + -2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 27*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 26*a4 + -1*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 27*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 26*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 6*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + -2*a5 + 6*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 3*a2 + -2*a3 + 0*a4 + 2*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 4*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 4*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 3*a4 + -1*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + -2*a3 + 0*a4 + 2*a5 + 3*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 3*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + -2*a5 + 3*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 2*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + 0*a4 + 1*a5 + 2*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 2*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 2*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 2*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -2*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + -2*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 1*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 1*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 0*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 3*a2 + -2*a3 + -28*a4 + 2*a5 + -24*a6 >= 0 and 1*a1 + 2*a2 + -2*a3 + -28*a4 + 2*a5 + -25*a6 >= 0 and 4*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -25*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + -27*a4 + 1*a5 + -25*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + -28*a4 + 1*a5 + -25*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + -25*a6 >= 0 and 3*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 >= 0 and 2*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 >= 0 and 4*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -26*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + -27*a4 + 1*a5 + -26*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + -28*a4 + 1*a5 + -26*a6 >= 0 and 4*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -26*a6 >= 0 and 3*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 >= 0 and 2*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 >= 0 and 3*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 >= 0 and 2*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 >= 0 and 4*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -27*a6 >= 0 and 1*a1 + 28*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 1*a1 + 2*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 28*a1 + 1*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -27*a6 >= 0 and 3*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 >= 0 and 2*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 >= 0 and 1*a1 + 28*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 1*a1 + 2*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 28*a1 + 1*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + -2*a5 + 5*a6 >= 0 } )

#result: { [d0 = 0, b0 = 1, c0 = -6, a1 = 0, a2 = 1, a3 = 0, a4 = 0, a5 = 0, a6 = 0] }

#hyperplane: { [a1 = 0, a2 = 1, a3 = 0, a4 = 0, a5 = 0, a6 = 0] }

#hyperplane check: { : exists c1, c2 : ( c1!=0 or c2!=0 ) and c2*0 = c1*1 and c2*1 = c1*0 and c2*0 = c1*0 and c2*0 = c1*0 and c2*0 = c1*0 and c2*0 = c1*0 } = {}

#result: true

#hyperplane for dim: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a4 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a2 >= 0  and a4 <= 0  and a4 >= 0  and ( 1 = 0  or a1 != 0  or a2 != 0  or a4 != 0  or a6 != 0  )  and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 33*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 32*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 30*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 30*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 29*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 29*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 28*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 26*a4 + -2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 27*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 26*a4 + -1*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 27*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 26*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 6*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + -2*a5 + 6*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 3*a2 + -2*a3 + 0*a4 + 2*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 4*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 4*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 3*a4 + -1*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + -2*a3 + 0*a4 + 2*a5 + 3*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 3*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + -2*a5 + 3*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 2*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + 0*a4 + 1*a5 + 2*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 2*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 2*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 2*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -2*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + -2*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 1*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 1*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 0*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 3*a2 + -2*a3 + -28*a4 + 2*a5 + -24*a6 >= 0 and 1*a1 + 2*a2 + -2*a3 + -28*a4 + 2*a5 + -25*a6 >= 0 and 4*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -25*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + -27*a4 + 1*a5 + -25*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + -28*a4 + 1*a5 + -25*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + -25*a6 >= 0 and 3*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 >= 0 and 2*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 >= 0 and 4*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -26*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + -27*a4 + 1*a5 + -26*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + -28*a4 + 1*a5 + -26*a6 >= 0 and 4*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -26*a6 >= 0 and 3*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 >= 0 and 2*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 >= 0 and 3*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 >= 0 and 2*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 >= 0 and 4*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -27*a6 >= 0 and 1*a1 + 28*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 1*a1 + 2*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 28*a1 + 1*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -27*a6 >= 0 and 3*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 >= 0 and 2*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 >= 0 and 1*a1 + 28*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 1*a1 + 2*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 28*a1 + 1*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + -2*a5 + 5*a6 >= 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#hyperplane for dim: lexmin( {[d0 = 0, b0, c0, a1, a2, a3, a4, a5, a6] : a6 != 0 } * {[d0, b0, c0, a1, a2, a3, a4, a5, a6] : exists b1, c1, b2, c2, b3, c3, b4, c4, b5, c5, b6, c6 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and ((b3 = a3 and a3 >= 0) or (b3 = -a3 and a3 < 0)) and ((c3 = -1 and a3 >= 0) or (c3 = 0 and a3 < 0)) and ((b4 = a4 and a4 >= 0) or (b4 = -a4 and a4 < 0)) and ((c4 = -1 and a4 >= 0) or (c4 = 0 and a4 < 0)) and ((b5 = a5 and a5 >= 0) or (b5 = -a5 and a5 < 0)) and ((c5 = -1 and a5 >= 0) or (c5 = 0 and a5 < 0)) and ((b6 = a6 and a6 >= 0) or (b6 = -a6 and a6 < 0)) and ((c6 = -1 and a6 >= 0) or (c6 = 0 and a6 < 0)) and b0 > 0 and b0 = b1 + b2 + b3 + b4 + b5 + b6 and c0 = c1 + c2 + c3 + c4 + c5 + c6 and a1 >= 0  and a2 >= 0  and a4 <= 0  and a4 >= 0  and ( 1 = 0  or a1 != 0  or a2 != 0  or a4 != 0  or a6 != 0  )  and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 33*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 32*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 30*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 30*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + 0*a5 + 29*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 29*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 29*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 29*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 3*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + 0*a5 + 28*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 28*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 27*a4 + -2*a5 + 28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 26*a4 + -2*a5 + 28*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -1*a5 + 27*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -1*a5 + 27*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 26*a4 + -1*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 28*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 28*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 27*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 27*a4 + -2*a5 + 27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 26*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 6*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 4*a4 + -2*a5 + 6*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 5*a6 >= 0 and 1*a1 + 3*a2 + -2*a3 + 0*a4 + 2*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 2*a4 + 1*a5 + 4*a6 >= 0 and 1*a1 + 3*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 4*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 4*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 3*a4 + -1*a5 + 4*a6 >= 0 and 1*a1 + 2*a2 + -2*a3 + 0*a4 + 2*a5 + 3*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + 1*a4 + 1*a5 + 3*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 3*a6 >= 0 and 0*a1 + 1*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 3*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 3*a4 + -2*a5 + 3*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 2*a5 + 2*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + 0*a4 + 1*a5 + 2*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 2*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 2*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 2*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -1*a5 + 2*a6 >= 0 and 1*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 2*a4 + -2*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 2*a4 + -2*a5 + 2*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 2*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + 0*a4 + 1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -2*a4 + 1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -3*a4 + 1*a5 + 1*a6 >= 0 and 4*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 2*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 1*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 0*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 1*a2 + 0*a3 + -1*a4 + 0*a5 + 1*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 1*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -28*a4 + 0*a5 + 1*a6 >= 0 and 0*a1 + 0*a2 + 2*a3 + 1*a4 + -1*a5 + 1*a6 >= 0 and 3*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 >= 0 and 2*a1 + 1*a2 + 0*a3 + -4*a4 + 1*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + 0*a6 >= 0 and 0*a1 + 0*a2 + 1*a3 + 0*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 0*a2 + 0*a3 + -1*a4 + 0*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -2*a4 + 0*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -3*a4 + 0*a5 + 0*a6 >= 0 and 4*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + 0*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -1*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -2*a4 + -2*a5 + 0*a6 >= 0 and 3*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 >= 0 and 2*a1 + 0*a2 + 0*a3 + -4*a4 + 0*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 27*a4 + -2*a5 + -1*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 28*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 2*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 28*a1 + 1*a2 + 0*a3 + -3*a4 + -2*a5 + -1*a6 >= 0 and 1*a1 + 3*a2 + -2*a3 + -28*a4 + 2*a5 + -24*a6 >= 0 and 1*a1 + 2*a2 + -2*a3 + -28*a4 + 2*a5 + -25*a6 >= 0 and 4*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -25*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + -27*a4 + 1*a5 + -25*a6 >= 0 and 0*a1 + 2*a2 + -2*a3 + -28*a4 + 1*a5 + -25*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + 0*a5 + -25*a6 >= 0 and 3*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 >= 0 and 2*a1 + 1*a2 + -2*a3 + -30*a4 + 2*a5 + -26*a6 >= 0 and 4*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -26*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + -27*a4 + 1*a5 + -26*a6 >= 0 and 0*a1 + 1*a2 + -2*a3 + -28*a4 + 1*a5 + -26*a6 >= 0 and 4*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -26*a6 >= 0 and 3*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 >= 0 and 2*a1 + 1*a2 + -2*a3 + -31*a4 + 2*a5 + -27*a6 >= 0 and 3*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 >= 0 and 2*a1 + 0*a2 + -2*a3 + -30*a4 + 1*a5 + -27*a6 >= 0 and 4*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -27*a6 >= 0 and 1*a1 + 28*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 1*a1 + 2*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 28*a1 + 1*a2 + -1*a3 + -29*a4 + 0*a5 + -27*a6 >= 0 and 0*a1 + 0*a2 + 0*a3 + 1*a4 + -2*a5 + -27*a6 >= 0 and 3*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 >= 0 and 2*a1 + 0*a2 + -2*a3 + -31*a4 + 1*a5 + -28*a6 >= 0 and 1*a1 + 28*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 1*a1 + 2*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 28*a1 + 1*a2 + -1*a3 + -30*a4 + 0*a5 + -28*a6 >= 0 and 1*a1 + 1*a2 + 1*a3 + 3*a4 + -2*a5 + 5*a6 >= 0 } )

#result: { [d0, b0, c0, a1, a2, a3, a4, a5, a6] : false }

#hyperplane: { [a1, a2, a3, a4, a5, a6] : false }

#hyperplane check: hyperplane is empty 

#result: false

#create hyperplanes stop

#create spaces start

#part: [N] -> { [i0, i1, i2, i3, i4, i5] -> [  h0, h1, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : exists bh0 : 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 } 

#part: [N] -> { [i0, i1, i2, i3, i4, i5] -> [  h0, h1, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : exists bh1 : 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 } 

#spaces mapper: [N] -> { [i0, i1, i2, i3, i4, i5] -> [h0, h1, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0 and -31 + i1 <= 32h1 <= i1 }

#create spaces stop

#create tile scop start

#tile scop mapper: [N] -> { S_3[i0, i1, i2, i3, i4, i5] -> S_3[h0, h1, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0 and -31 + i1 <= 32h1 <= i1; S_0[i0, i1, i2, i3, i4, i5] -> S_0[h0, h1, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0 and -31 + i1 <= 32h1 <= i1; S_1[i0, i1, i2, i3, i4, i5] -> S_1[h0, h1, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0 and -31 + i1 <= 32h1 <= i1; S_2[i0, i1, i2, i3, i4, i5] -> S_2[h0, h1, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0 and -31 + i1 <= 32h1 <= i1; S_4[i0, i1, i2, i3, i4, i5] -> S_4[h0, h1, ii0 = i0, ii1 = i1, ii2 = i2, ii3 = i3, ii4 = i4, ii5 = i5] : -15 + i0 <= 16h0 <= i0 and -31 + i1 <= 32h1 <= i1 }

#tile scop delta: { [h0, h1, ii0, ii1, ii2, ii3, ii4, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 31 + 32h1 and ii0 - ii1 < ii2 <= 2 and 12ii2 <= 54 - 8h0 - 16h1 - 13ii1 and 24ii2 <= 75 - ii0 - 27ii1 and ii4 >= -33 + 16h0 + 32h1 - ii0 - ii3 and ii4 >= -4 + ii0 + ii2 and ii4 >= -4 + ii1 + ii2 and ii4 >= ii1 - ii3 and -2 <= ii4 <= -3 + ii2 and ii5 >= -4 + ii0 + ii1 + ii2 + ii3 - ii4 and ii5 > 3ii1 - 2ii2 + ii3 and 52 + ii1 + 25ii4 <= ii5 <= 27 + ii1 and ii5 <= ii0 + ii1 + ii3 and 26ii5 >= 27 + 51ii1 - 25ii2 + 25ii3; [h0, h1, ii0, ii1, ii2 = 2, ii3, ii4, ii5] : h0 >= 0 and ii0 >= 0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 16 - 16h0 and ii1 <= 1 - ii0 and ii1 <= 31 + 32h1 and 26ii1 < ii3 <= 28 - ii1 and ii4 >= -17 + 16h0 and ii4 >= -2 + ii0 and ii4 >= -2 + ii1 and -25 - ii3 <= 26ii4 <= -11 - 16h0 + ii0 + 26ii1 and 26ii4 <= -26 + ii0 + 25ii1 and 676ii4 <= -703 + 26ii0 + 676ii1 + ii3 and ii5 >= 51 + 2ii0 - 50ii1 + ii3 + 52ii4 and ii5 >= 2 + 26ii1 and ii5 >= -23 + ii1 - 25ii4 and 677 - 25ii0 - 649ii1 + 650ii4 <= ii5 <= 27 + ii1 and 652 - 599ii1 + 25ii3 + 650ii4 <= 26ii5 <= -599 + 650ii1 + 27ii3 - 624ii4 and 27ii5 >= 1329 - 1248ii1 + 25ii3 + 1300ii4; [h0, h1, ii0, ii1, ii2, ii3, ii4, ii5 = ii0 + ii1 + ii3] : h1 >= 0 and ii0 <= 15 + 16h0 and ii1 >= -15 + 16h0 - ii0 and ii1 >= h1 and ii1 >= -ii0 and ii2 <= 3 - ii0 - ii1 and ii2 <= 2 and ii4 >= -2 + ii0 - ii1 and ii4 >= -ii3 and -2 - ii0 + ii1 <= ii4 <= 15 - 16h0 - ii1 and ii4 <= -3 + ii2 and 2ii4 >= -2 - ii0 + 2ii1 - ii3; [h0, h1, ii0, ii1, ii2, ii3, ii4 = -1 - ii2, ii5 = 1 - ii2 + ii3] : -15 + 16h0 <= ii0 <= 15 + 16h0 and -31 + 32h1 <= ii1 <= 31 + 32h1 and -ii0 <= ii2 <= 28 - ii0 - ii1 and ii2 < 0 and ii2 <= -2 + ii1 and ii2 <= -4 + ii0 + ii1 and 25ii2 >= -53 + ii0 and 28ii2 >= -56 + ii1 and ii3 <= -28 + ii2; [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii0, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 1 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii0 < ii1 <= 31 + 32h1 and ii3 > 0 and -1 + ii0 + ii1 + ii3 <= ii5 <= ii0 + ii1 + ii3; [h0, h1, ii0, ii1, ii2 = 1 - ii0 - ii1, ii3, ii4 = 0, ii5] : h0 >= 0 and h1 >= 0 and ii0 >= -15 + 16h0 and ii1 >= -31 + 32h1 - ii0 and ii1 >= 0 and -ii0 <= ii3 <= 0 and 0 <= ii5 <= 59 - 32h1 - 27ii0 - 26ii1 + ii3 and ii5 <= 28 - 27ii0 - 26ii1 + ii3 and ii5 <= ii0 + ii1 and 2ii5 >= -43 + 16h0 + 29ii0 + 29ii1 + 2ii3 and 2ii5 >= -28 + 29ii0 + 29ii1 + ii3; [h0, h1, ii0, ii1 = ii0, ii2, ii3, ii4 = 0, ii5] : ii0 >= -15 + 16h0 and ii0 >= -31 + 32h1 and 0 <= ii0 <= 31 + 32h1 and ii0 <= 15 + 16h0 and 0 < ii2 <= 2 - ii0 and ii3 <= 28 - ii0 and ii5 > 2ii0 + ii3 and 28 + ii0 <= ii5 <= 59 - 16h0 - 32h1 + 2ii0 + ii3 and ii5 <= 26 + ii3 and ii5 <= 71 + 16h0 + 32h1 - 2ii0 + ii3; [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = 0, ii5] : ii0 <= 15 + 16h0 and ((ii0 >= -15 + 16h0 and ii0 > 0 and ii1 >= -31 + 32h1 and ii1 > 0 and 3 - ii0 <= ii1 <= 29 - ii0 and ii1 <= 31 + 32h1 and ii3 < 0 and ii5 >= 3 + ii3 and 0 < ii5 <= 29 + ii3) or (h0 <= 1 and ii1 >= -31 + 32h1 and -ii0 < ii1 <= 1 and ii1 <= 32 + 32h1 - ii0 and -1 <= ii3 <= 1 - 2ii0 and ii3 <= 47 + 16h0 + 32h1 + 24ii0 - 2ii1 and ii5 >= -6 + 8h0 - 14ii0 + ii3 and ii5 >= -1 + ii0 + ii1 and -6 - 8h0 - 13ii0 + ii3 <= ii5 <= 1 - ii0 + ii1 and ii5 <= 28ii0 + ii1 + ii3 and 2ii5 >= -45 + 16h0 - 32h1 - 53ii0 + 2ii1 + 3ii3 and 2 - 28ii0 + ii3 <= 2ii5 <= 17 - 16h0 + 28ii0 + ii1 + 2ii3 and 2ii5 <= 16 + 16h0 + 27ii0 + ii1 + 2ii3) or (ii0 >= -15 + 16h0 and ii0 >= -30 - 32h1 and ii1 <= 1 and ii3 >= -71 + 16h0 + 32h1 + 25ii0 - 2ii1 and ii3 >= -57 + 32h1 + 26ii0 - 2ii1 and ii3 >= -27 + 27ii0 - ii1 and -ii0 - ii1 < ii3 < ii0 + ii1 and ii5 >= -73 + 16h0 + 32h1 + 27ii0 and ii5 >= -88 + 32h1 + 29ii0 + 29ii1 + ii3 and ii5 >= -59 + 32h1 + 28ii0 and ii5 >= -56 + 29ii0 + 29ii1 + ii3 and ii5 >= -27 + 28ii0 and 0 < ii5 <= 88 - 32h0 - 32h1 - 24ii0 + 2ii1 + 2ii3 and ii5 <= 42 - 16h0 - 25ii0 + 2ii1 + 2ii3 and ii5 <= 86 - 32h1 - 26ii0 - 26ii1 + ii3 and ii5 <= 56 - 27ii0 - 27ii1 + ii3 and ii5 < 2ii0 + 2ii1 and ii5 <= 130 + 16h0 - 64h1 - 52ii0 + 4ii1 + 3ii3 and ii5 <= 41 + 16h0 - 26ii0 + 2ii1 + 2ii3 and 2ii5 >= -102 + 16h0 + 32h1 + 29ii0 + 29ii1 + 2ii3 and 2ii5 >= -70 + 16h0 + 29ii0 + 29ii1 + 2ii3 and -103 - 16h0 + 32h1 + 31ii0 + 30ii1 + 2ii3 <= 2ii5 <= 103 - 16h0 - 32h1 - 25ii0 - 26ii1 + 2ii3 and 2ii5 <= 71 - 16h0 - 25ii0 - 26ii1 + 2ii3 and 3ii5 >= -160 + 16h0 + 64h1 + 57ii0 + 29ii1 + 2ii3 and 3ii5 >= -156 + 16h0 - 32h1 + 58ii0 + 58ii1 + 3ii3 and -157 - 16h0 - 32h1 + 60ii0 + 59ii1 + 3ii3 <= 3ii5 <= 170 + 32h0 + 32h1 - 53ii0 - 53ii1 + 3ii3)); [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2 = 0, ii3, ii4 = 2, ii5] : ii3 >= 0 and ii5 > ii3 and ((ii3 <= 1 and ii5 <= 28) or ii5 <= 27 + ii3); [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2 = 0, ii3, ii4 = -2, ii5] : ii3 > 0 and -28 + ii3 <= ii5 < 0; [h0, h1 = 0, ii0, ii1 = 0, ii2, ii3, ii4, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii2 <= 2 and -2 + ii0 <= ii4 <= -3 + ii2 and ii5 >= -1 + ii0 + ii3 and 27 <= ii5 <= ii0 + ii3; [h0, h1, ii0, ii1, ii2 = 2, ii3, ii4 = -1, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii1 <= 31 + 32h1 and ((ii1 >= -31 + 32h1 and ii1 >= 0 and ii3 > -ii0 + ii1 and -32 - 16h0 + 32h1 <= ii3 <= 28 - 2ii0 and ii5 >= 2ii0 + ii1 and -1 + ii0 + 2ii1 + ii3 <= ii5 <= 1 + ii3 and ii5 <= 27 + ii1 and ii5 <= ii0 + ii1 + ii3 and 27ii5 > 26ii0 + 27ii1 + 26ii3) or (ii1 >= -33 + 16h0 + 32h1 - ii0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 - ii0 and ii1 <= 45 + 16h0 + 32h1 - ii0 and ii3 <= 27 + ii1 and 26ii0 + 2ii1 < ii5 <= 28 - ii0 and ii5 <= ii0 + ii1 + ii3 and 28ii5 > -ii0 + 27ii1 + 27ii3) or (13ii0 <= 30 - 8h0 - 16h1 and 27ii1 >= -33 + 16h0 + 32h1 - ii0 and ii3 > 0 and -ii0 + 26ii1 < ii3 <= 28 - ii0 and ii5 >= -59 + 32h1 + 28ii0 + ii1 + ii3 and ii5 >= -32 + 32h1 + ii0 - 26ii1 + ii3 and ii5 >= -27 + 28ii0 + ii1 + ii3 and ii5 >= ii0 - 26ii1 + ii3 and ii5 > 27ii1 and -45 - 16h0 - 32h1 + 2ii0 - 25ii1 + ii3 <= ii5 <= 59 - 16h0 - 32h1 - 24ii0 + ii1 + ii3 and ii5 <= 33 - 16h0 - 32h1 + 2ii0 + 27ii1 + ii3 and ii5 <= 57 - 32h1 - 25ii0 + ii1 + ii3 and ii5 <= 31 - 32h1 + ii0 + 27ii1 + ii3 and ii5 <= 26 - 25ii0 + ii3 and ii5 <= 27 + ii1 and ii5 <= ii0 + 26ii1 + ii3)); [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2 = 0, ii3, ii4 = 0, ii5] : ii3 > 0 and ii5 >= -26 + ii3 and ((ii3 <= 27 and ii5 <= 27) or (-1 + ii3 <= ii5 <= ii3)); [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2 = 0, ii3 = 0, ii4 = 0, ii5] : 0 < ii5 <= 26; [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii1, ii5 = 3 + ii1 + ii3] : ii0 >= -15 + 16h0 and 2 <= ii0 <= 3 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1 and ii3 <= -3; [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = -2, ii5 = 2 + ii3] : ii0 >= -15 + 16h0 and 0 < ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii1 > 0 and 3 - ii0 <= ii1 <= 29 - ii0 and ii1 <= 31 + 32h1 and ii3 <= -2; [h0, h1, ii0, ii1, ii2 = -2, ii3, ii4 = 1 + ii0, ii5 = ii0 + ii1 + ii3] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 1 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii0 < ii1 <= 31 + 32h1 and -27 - ii0 <= ii3 <= 0; [h0, h1, ii0, ii1, ii2 = -2, ii3, ii4 = 1 + ii1, ii5 = ii0 + ii1 + ii3] : ii0 >= -15 + 16h0 and 3 <= ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1 and ii3 <= -30; [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii0, ii5 = ii0 + ii1 + ii3] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 1 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii0 < ii1 <= 31 + 32h1 and ii3 > 0; [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii1, ii5 = ii0 + ii1 + ii3] : ii0 >= -15 + 16h0 and 3 <= ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1 and ii3 <= -3; [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii1, ii5 = ii1] : ii0 >= -15 + 16h0 and 2 <= ii0 <= 3 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1 and -3 <= ii3 <= -2; [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = -2, ii5 = 0] : ii0 >= -15 + 16h0 and 0 < ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii1 > 0 and 3 - ii0 <= ii1 <= 29 - ii0 and ii1 <= 31 + 32h1 and -2 <= ii3 < 0; [h0, h1, ii0, ii1 = 1, ii2 = 2 - ii0, ii3, ii4 = -1 - ii0, ii5] : 0 <= h1 <= 1 and ii0 >= -15 + 16h0 and 0 <= ii0 <= 1 and ii0 <= 15 + 16h0 and ii5 >= ii0 + ii3 and 28 <= ii5 <= 1 + ii0 + ii3; [h0, h1, ii0, ii1 = ii0, ii2 = 1, ii3, ii4 = -2, ii5] : ii0 >= -15 + 16h0 and ii0 >= -31 + 32h1 and 0 <= ii0 <= 31 + 32h1 and ii0 <= 15 + 16h0 and ii3 >= -31 + 16h0 + 32h1 - ii0 and ii3 >= -43 - 16h0 - 32h1 + 3ii0 and ii5 >= 2 + 26ii0 and -29 + 3ii0 + 2ii3 <= ii5 <= 27 + ii0 and ii5 <= 2ii0 + ii3 and 3ii5 >= -10 + 2h0 + 4h1 + 6ii0 + 3ii3 and 26ii5 >= 2 + 26ii0 + 25ii3; [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii1, ii5 = -3 + ii0 + ii1] : ii0 >= -15 + 16h0 and 3 <= ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1 and -3 <= ii3 <= -2; [h0, h1, ii0, ii1, ii2, ii3 = -28 + ii2, ii4 = -1 - ii2, ii5 = -27] : -15 + 16h0 <= ii0 <= 15 + 16h0 and -31 + 32h1 <= ii1 <= 29 - ii0 and ii1 <= 31 + 32h1 and -ii0 <= ii2 < 0 and ii2 <= -2 + ii1 and ii2 <= -4 + ii0 + ii1 and 25ii2 >= -53 + ii0 and 28ii2 >= -56 + ii1; [h0, h1, ii0, ii1 = 1, ii2 = -2, ii3, ii4 = 2, ii5 = 4 + ii3] : 0 <= h1 <= 1 and ii0 >= -15 + 16h0 and 2 <= ii0 <= 3 and ii0 <= 15 + 16h0 and ii3 <= -30; [h0, h1, ii0, ii1, ii2 = -2, ii3 = 0, ii4 = 1 + ii0, ii5 = ii0 + ii1] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 1 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii0 < ii1 <= 31 + 32h1; [h0, h1, ii0 = 1, ii1 = 1, ii2 = 1, ii3, ii4 = 0, ii5] : 0 <= h0 <= 1 and h1 >= 0 and ii3 >= -29 + 32h1 and ii3 >= 3 and ii5 >= -16 + 16h0 + 32h1 and ii5 >= -30 + 32h1 + ii3 and ii5 >= -3 + 32h1 and ii5 >= 3 + ii3 and 29 <= ii5 <= 29 + ii3; [h0, h1, ii0, ii1, ii2 = -2, ii3 = -30, ii4 = 1 + ii1, ii5 = -30 + ii0 + ii1] : ii0 >= -15 + 16h0 and 3 <= ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1; [h0, h1, ii0, ii1 = 1 - ii0, ii2 = 0, ii3 = 1 - ii0, ii4 = 0, ii5 = 2 - ii0] : ii0 >= -15 + 16h0 and ii0 >= 0 and -30 - 32h1 <= ii0 <= 32 - 32h1 and ii0 <= 1 and ii0 <= 15 + 16h0; [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2, ii3, ii4 = 0, ii5] : 0 < ii2 <= 2 and ii3 >= 2 and ii5 > ii3 and 28 <= ii5 <= 27 + ii3; [h0, h1, ii0, ii1 = 1, ii2 = -2, ii3 = -30, ii4 = 2, ii5 = -26] : 0 <= h1 <= 1 and ii0 >= -15 + 16h0 and 2 <= ii0 <= 3 and ii0 <= 15 + 16h0; [h0 = 0, h1, ii0 = 0, ii1, ii2 = -2, ii3, ii4 = 1, ii5 = -27 + ii1] : ii1 >= -31 + 32h1 and 0 < ii1 <= 31 + 32h1 and -28 <= ii3 <= -27; [h0, h1, ii0 = 1, ii1 = 1, ii2 = 0, ii3 = 1, ii4 = 0, ii5 = 3] : 0 <= h0 <= 1 and 0 <= h1 <= 1 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2, ii3, ii4, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 31 + 32h1 and ii0 - ii1 < ii2 <= 2 and 12ii2 <= 54 - 8h0 - 16h1 - 13ii1 and 24ii2 <= 75 - ii0 - 27ii1 and ii4 >= -33 + 16h0 + 32h1 - ii0 - ii3 and ii4 >= -4 + ii0 + ii2 and ii4 >= -4 + ii1 + ii2 and ii4 >= ii1 - ii3 and -2 <= ii4 <= -3 + ii2 and ii5 >= -4 + ii0 + ii1 + ii2 + ii3 - ii4 and ii5 > 3ii1 - 2ii2 + ii3 and 52 + ii1 + 25ii4 <= ii5 <= 27 + ii1 and ii5 <= ii0 + ii1 + ii3 and 26ii5 >= 27 + 51ii1 - 25ii2 + 25ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 2, ii3, ii4, ii5] : h0 >= 0 and ii0 >= 0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 16 - 16h0 and ii1 <= 1 - ii0 and ii1 <= 31 + 32h1 and 26ii1 < ii3 <= 28 - ii1 and ii4 >= -17 + 16h0 and ii4 >= -2 + ii0 and ii4 >= -2 + ii1 and -25 - ii3 <= 26ii4 <= -11 - 16h0 + ii0 + 26ii1 and 26ii4 <= -26 + ii0 + 25ii1 and 676ii4 <= -703 + 26ii0 + 676ii1 + ii3 and ii5 >= 51 + 2ii0 - 50ii1 + ii3 + 52ii4 and ii5 >= 2 + 26ii1 and ii5 >= -23 + ii1 - 25ii4 and 677 - 25ii0 - 649ii1 + 650ii4 <= ii5 <= 27 + ii1 and 652 - 599ii1 + 25ii3 + 650ii4 <= 26ii5 <= -599 + 650ii1 + 27ii3 - 624ii4 and 27ii5 >= 1329 - 1248ii1 + 25ii3 + 1300ii4 }

#tile scop delta part: { [h0, h1 = 0, ii0, ii1 = 0, ii2, ii3, ii4, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii2 <= 2 and -2 + ii0 <= ii4 <= -3 + ii2 and ii5 >= -1 + ii0 + ii3 and 27 <= ii5 <= ii0 + ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2, ii3, ii4, ii5 = ii0 + ii1 + ii3] : h1 >= 0 and ii0 <= 15 + 16h0 and ii1 >= -15 + 16h0 - ii0 and ii1 >= h1 and ii1 >= -ii0 and ii2 <= 3 - ii0 - ii1 and ii2 <= 2 and ii4 >= -2 + ii0 - ii1 and ii4 >= -ii3 and -2 - ii0 + ii1 <= ii4 <= 15 - 16h0 - ii1 and ii4 <= -3 + ii2 and 2ii4 >= -2 - ii0 + 2ii1 - ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1 = ii0, ii2, ii3, ii4 = 0, ii5] : ii0 >= -15 + 16h0 and ii0 >= -31 + 32h1 and 0 <= ii0 <= 31 + 32h1 and ii0 <= 15 + 16h0 and 0 < ii2 <= 2 - ii0 and ii3 <= 28 - ii0 and ii5 > 2ii0 + ii3 and 28 + ii0 <= ii5 <= 59 - 16h0 - 32h1 + 2ii0 + ii3 and ii5 <= 26 + ii3 and ii5 <= 71 + 16h0 + 32h1 - 2ii0 + ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = 0, ii5] : ii0 >= -15 + 16h0 and 0 < ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii1 > 0 and 3 - ii0 <= ii1 <= 29 - ii0 and ii1 <= 31 + 32h1 and ii3 < 0 and ii5 >= 3 + ii3 and 0 < ii5 <= 29 + ii3 }

#tile scop delta part: { [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2 = 0, ii3, ii4 = 0, ii5] : 0 < ii3 <= 27 and -26 + ii3 <= ii5 <= 27 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 2, ii3, ii4 = -1, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 31 + 32h1 and ii3 > -ii0 + ii1 and -32 - 16h0 + 32h1 <= ii3 <= 28 - 2ii0 and ii5 >= 2ii0 + ii1 and -1 + ii0 + 2ii1 + ii3 <= ii5 <= 1 + ii3 and ii5 <= 27 + ii1 and ii5 <= ii0 + ii1 + ii3 and 27ii5 > 26ii0 + 27ii1 + 26ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 2, ii3, ii4 = -1, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and 13ii0 <= 30 - 8h0 - 16h1 and ii1 <= 31 + 32h1 and 27ii1 >= -33 + 16h0 + 32h1 - ii0 and ii3 > 0 and -ii0 + 26ii1 < ii3 <= 28 - ii0 and ii5 >= -59 + 32h1 + 28ii0 + ii1 + ii3 and ii5 >= -32 + 32h1 + ii0 - 26ii1 + ii3 and ii5 >= -27 + 28ii0 + ii1 + ii3 and ii5 >= ii0 - 26ii1 + ii3 and ii5 > 27ii1 and -45 - 16h0 - 32h1 + 2ii0 - 25ii1 + ii3 <= ii5 <= 59 - 16h0 - 32h1 - 24ii0 + ii1 + ii3 and ii5 <= 33 - 16h0 - 32h1 + 2ii0 + 27ii1 + ii3 and ii5 <= 57 - 32h1 - 25ii0 + ii1 + ii3 and ii5 <= 31 - 32h1 + ii0 + 27ii1 + ii3 and ii5 <= 26 - 25ii0 + ii3 and ii5 <= 27 + ii1 and ii5 <= ii0 + 26ii1 + ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 1 - ii0 - ii1, ii3, ii4 = 0, ii5] : h0 >= 0 and h1 >= 0 and ii0 >= -15 + 16h0 and ii1 >= -31 + 32h1 - ii0 and ii1 >= 0 and -ii0 <= ii3 <= 0 and 0 <= ii5 <= 59 - 32h1 - 27ii0 - 26ii1 + ii3 and ii5 <= 28 - 27ii0 - 26ii1 + ii3 and ii5 <= ii0 + ii1 and 2ii5 >= -43 + 16h0 + 29ii0 + 29ii1 + 2ii3 and 2ii5 >= -28 + 29ii0 + 29ii1 + ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = 0, ii5] : h0 <= 1 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and -ii0 < ii1 <= 1 and ii1 <= 32 + 32h1 - ii0 and -1 <= ii3 <= 1 - 2ii0 and ii3 <= 47 + 16h0 + 32h1 + 24ii0 - 2ii1 and ii5 >= -6 + 8h0 - 14ii0 + ii3 and ii5 >= -1 + ii0 + ii1 and -6 - 8h0 - 13ii0 + ii3 <= ii5 <= 1 - ii0 + ii1 and ii5 <= 28ii0 + ii1 + ii3 and 2ii5 >= -45 + 16h0 - 32h1 - 53ii0 + 2ii1 + 3ii3 and 2 - 28ii0 + ii3 <= 2ii5 <= 17 - 16h0 + 28ii0 + ii1 + 2ii3 and 2ii5 <= 16 + 16h0 + 27ii0 + ii1 + 2ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = 0, ii5] : ii0 >= -15 + 16h0 and -30 - 32h1 <= ii0 <= 15 + 16h0 and ii1 <= 1 and ii3 >= -71 + 16h0 + 32h1 + 25ii0 - 2ii1 and ii3 >= -57 + 32h1 + 26ii0 - 2ii1 and ii3 >= -27 + 27ii0 - ii1 and -ii0 - ii1 < ii3 < ii0 + ii1 and ii5 >= -73 + 16h0 + 32h1 + 27ii0 and ii5 >= -88 + 32h1 + 29ii0 + 29ii1 + ii3 and ii5 >= -59 + 32h1 + 28ii0 and ii5 >= -56 + 29ii0 + 29ii1 + ii3 and ii5 >= -27 + 28ii0 and 0 < ii5 <= 88 - 32h0 - 32h1 - 24ii0 + 2ii1 + 2ii3 and ii5 <= 42 - 16h0 - 25ii0 + 2ii1 + 2ii3 and ii5 <= 86 - 32h1 - 26ii0 - 26ii1 + ii3 and ii5 <= 56 - 27ii0 - 27ii1 + ii3 and ii5 < 2ii0 + 2ii1 and ii5 <= 130 + 16h0 - 64h1 - 52ii0 + 4ii1 + 3ii3 and ii5 <= 41 + 16h0 - 26ii0 + 2ii1 + 2ii3 and 2ii5 >= -102 + 16h0 + 32h1 + 29ii0 + 29ii1 + 2ii3 and 2ii5 >= -70 + 16h0 + 29ii0 + 29ii1 + 2ii3 and -103 - 16h0 + 32h1 + 31ii0 + 30ii1 + 2ii3 <= 2ii5 <= 103 - 16h0 - 32h1 - 25ii0 - 26ii1 + 2ii3 and 2ii5 <= 71 - 16h0 - 25ii0 - 26ii1 + 2ii3 and 3ii5 >= -160 + 16h0 + 64h1 + 57ii0 + 29ii1 + 2ii3 and 3ii5 >= -156 + 16h0 - 32h1 + 58ii0 + 58ii1 + 3ii3 and -157 - 16h0 - 32h1 + 60ii0 + 59ii1 + 3ii3 <= 3ii5 <= 170 + 32h0 + 32h1 - 53ii0 - 53ii1 + 3ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1 = 1, ii2 = -2, ii3 = -30, ii4 = 2, ii5 = -26] : 0 <= h1 <= 1 and ii0 >= -15 + 16h0 and 2 <= ii0 <= 3 and ii0 <= 15 + 16h0 }

#tile scop delta part: { [h0, h1, ii0 = 1, ii1 = 1, ii2 = 0, ii3 = 1, ii4 = 0, ii5 = 3] : 0 <= h0 <= 1 and 0 <= h1 <= 1 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii0, ii5 = ii0 + ii1 + ii3] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 1 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii0 < ii1 <= 31 + 32h1 and ii3 > 0 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii1, ii5 = ii0 + ii1 + ii3] : ii0 >= -15 + 16h0 and 3 <= ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1 and ii3 <= -3 }

#tile scop delta part: { [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2 = 0, ii3, ii4 = 2, ii5] : 0 <= ii3 <= 1 and ii3 < ii5 <= 28 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = -2, ii5 = 2 + ii3] : ii0 >= -15 + 16h0 and 0 < ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii1 > 0 and 3 - ii0 <= ii1 <= 29 - ii0 and ii1 <= 31 + 32h1 and ii3 <= -2 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii1, ii5 = 3 + ii1 + ii3] : ii0 >= -15 + 16h0 and 2 <= ii0 <= 3 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1 and ii3 <= -3 }

#tile scop delta part: { [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2 = 0, ii3 = 0, ii4 = 0, ii5] : 0 < ii5 <= 26 }

#tile scop delta part: { [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2 = 0, ii3, ii4 = -2, ii5] : ii3 > 0 and -28 + ii3 <= ii5 < 0 }

#tile scop delta part: { [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2 = 0, ii3, ii4 = 0, ii5] : ii3 > 0 and -1 + ii3 <= ii5 <= ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii0, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 1 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii0 < ii1 <= 31 + 32h1 and ii3 > 0 and -1 + ii0 + ii1 + ii3 <= ii5 <= ii0 + ii1 + ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii1, ii5 = -3 + ii0 + ii1] : ii0 >= -15 + 16h0 and 3 <= ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1 and -3 <= ii3 <= -2 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = -2, ii5 = 0] : ii0 >= -15 + 16h0 and 0 < ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii1 > 0 and 3 - ii0 <= ii1 <= 29 - ii0 and ii1 <= 31 + 32h1 and -2 <= ii3 < 0 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 0, ii3, ii4 = ii1, ii5 = ii1] : ii0 >= -15 + 16h0 and 2 <= ii0 <= 3 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1 and -3 <= ii3 <= -2 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = 2, ii3, ii4 = -1, ii5] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 15 + 16h0 and ii1 >= -33 + 16h0 + 32h1 - ii0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 - ii0 and ii1 <= 31 + 32h1 and ii1 <= 45 + 16h0 + 32h1 - ii0 and ii3 <= 27 + ii1 and 26ii0 + 2ii1 < ii5 <= 28 - ii0 and ii5 <= ii0 + ii1 + ii3 and 28ii5 > -ii0 + 27ii1 + 27ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2, ii3, ii4 = -1 - ii2, ii5 = 1 - ii2 + ii3] : -15 + 16h0 <= ii0 <= 15 + 16h0 and -31 + 32h1 <= ii1 <= 31 + 32h1 and -ii0 <= ii2 <= 28 - ii0 - ii1 and ii2 < 0 and ii2 <= -2 + ii1 and ii2 <= -4 + ii0 + ii1 and 25ii2 >= -53 + ii0 and 28ii2 >= -56 + ii1 and ii3 <= -28 + ii2 }

#tile scop delta part: { [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2, ii3, ii4 = 0, ii5] : 0 < ii2 <= 2 and ii3 >= 2 and ii5 > ii3 and 28 <= ii5 <= 27 + ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1 = ii0, ii2 = 1, ii3, ii4 = -2, ii5] : ii0 >= -15 + 16h0 and ii0 >= -31 + 32h1 and 0 <= ii0 <= 31 + 32h1 and ii0 <= 15 + 16h0 and ii3 >= -31 + 16h0 + 32h1 - ii0 and ii3 >= -43 - 16h0 - 32h1 + 3ii0 and ii5 >= 2 + 26ii0 and -29 + 3ii0 + 2ii3 <= ii5 <= 27 + ii0 and ii5 <= 2ii0 + ii3 and 3ii5 >= -10 + 2h0 + 4h1 + 6ii0 + 3ii3 and 26ii5 >= 2 + 26ii0 + 25ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2, ii3 = -28 + ii2, ii4 = -1 - ii2, ii5 = -27] : -15 + 16h0 <= ii0 <= 15 + 16h0 and -31 + 32h1 <= ii1 <= 29 - ii0 and ii1 <= 31 + 32h1 and -ii0 <= ii2 < 0 and ii2 <= -2 + ii1 and ii2 <= -4 + ii0 + ii1 and 25ii2 >= -53 + ii0 and 28ii2 >= -56 + ii1 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = -2, ii3 = 0, ii4 = 1 + ii0, ii5 = ii0 + ii1] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 1 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii0 < ii1 <= 31 + 32h1 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = -2, ii3, ii4 = 1 + ii1, ii5 = ii0 + ii1 + ii3] : ii0 >= -15 + 16h0 and 3 <= ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1 and ii3 <= -30 }

#tile scop delta part: { [h0, h1, ii0, ii1 = 1, ii2 = 2 - ii0, ii3, ii4 = -1 - ii0, ii5] : 0 <= h1 <= 1 and ii0 >= -15 + 16h0 and 0 <= ii0 <= 1 and ii0 <= 15 + 16h0 and ii5 >= ii0 + ii3 and 28 <= ii5 <= 1 + ii0 + ii3 }

#tile scop delta part: { [h0 = 0, h1 = 0, ii0 = 0, ii1 = 0, ii2 = 0, ii3, ii4 = 2, ii5] : ii3 >= 0 and ii3 < ii5 <= 27 + ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = -2, ii3, ii4 = 1 + ii0, ii5 = ii0 + ii1 + ii3] : ii0 >= -15 + 16h0 and 0 <= ii0 <= 1 and ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and ii0 < ii1 <= 31 + 32h1 and -27 - ii0 <= ii3 <= 0 }

#tile scop delta part: { [h0, h1, ii0, ii1, ii2 = -2, ii3 = -30, ii4 = 1 + ii1, ii5 = -30 + ii0 + ii1] : ii0 >= -15 + 16h0 and 3 <= ii0 <= 15 + 16h0 and ii1 >= -31 + 32h1 and 0 <= ii1 <= 1 and ii1 <= 31 + 32h1 }

#tile scop delta part: { [h0, h1, ii0 = 1, ii1 = 1, ii2 = 1, ii3, ii4 = 0, ii5] : 0 <= h0 <= 1 and h1 >= 0 and ii3 >= -29 + 32h1 and ii3 >= 3 and ii5 >= -16 + 16h0 + 32h1 and ii5 >= -30 + 32h1 + ii3 and ii5 >= -3 + 32h1 and ii5 >= 3 + ii3 and 29 <= ii5 <= 29 + ii3 }

#tile scop delta part: { [h0, h1, ii0, ii1 = 1, ii2 = -2, ii3, ii4 = 2, ii5 = 4 + ii3] : 0 <= h1 <= 1 and ii0 >= -15 + 16h0 and 2 <= ii0 <= 3 and ii0 <= 15 + 16h0 and ii3 <= -30 }

#tile scop delta part: { [h0, h1, ii0, ii1 = 1 - ii0, ii2 = 0, ii3 = 1 - ii0, ii4 = 0, ii5 = 2 - ii0] : ii0 >= -15 + 16h0 and ii0 >= 0 and -30 - 32h1 <= ii0 <= 32 - 32h1 and ii0 <= 1 and ii0 <= 15 + 16h0 }

#tile scop delta part: { [h0 = 0, h1, ii0 = 0, ii1, ii2 = -2, ii3, ii4 = 1, ii5 = -27 + ii1] : ii1 >= -31 + 32h1 and 0 < ii1 <= 31 + 32h1 and -28 <= ii3 <= -27 }

#tile delta: { [h0, h1] : 0 <= h0 <= 1 and h1 > 0; [h0, h1 = 1] : h0 >= 0; [h0, h1 = 0] : h0 > 0; [h0 = 1, h1 = 0] }

#create tile scop stop

#tile delta analyze start

#tile relatiions distance vector set: { [h0 = 1, h1 = 1] }

#tile relatiions distance vector set: { [h0 = 0, h1 = 1] }

#tile relatiions distance vector set: { [h0 = 2, h1 = 0] }

#tile relatiions distance vector set: { [h0 = 1, h1 = 0] }

#tile relatiions distance vector set: { [h0 = 1, h1 = 2] }

#tile relatiions distance vector set: { [h0 = 1, h1 = 1] }

#tile relatiions distance vector set: { [h0 = 0, h1 = 2] }

#tile relatiions distance vector set: { [h0 = 0, h1 = 1] }

#tile relatiions distance vector set: { [h0 = 1, h1 = 0] }

#tile delta analyze stop

#create wafefront equations start

#wafefront equations: {[d0, b0, c0, a1, a2] : exists b1, b2 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and b0 > 0 and b0 = b1 + b2 and 1*a1 + 2*a2 > 0 and 0*a1 + 2*a2 > 0 and 1*a1 + 1*a2 > 0 and 0*a1 + 1*a2 > 0 and 2*a1 + 0*a2 > 0 and 1*a1 + 0*a2 > 0 }

#create wafefront equations stop

#calculate wafefront hyperplane start

#wafefront hyperplane: lexmin( {[d0 = 0, b0, c0, a1, a2] : exists c1, c2 : ((c1 = -1 and a1 >= 0) or (c1 = 0 and a1 < 0)) and ((c2 = -1 and a2 >= 0) or (c2 = 0 and a2 < 0)) and c0 = c1 + c2 and a1 != 0 and a2 != 0} * {[d0, b0, c0, a1, a2] : exists b1, b2 : ((b1 = a1 and a1 >= 0) or (b1 = -a1 and a1 < 0)) and ((b2 = a2 and a2 >= 0) or (b2 = -a2 and a2 < 0)) and b0 > 0 and b0 = b1 + b2 and 1*a1 + 2*a2 > 0 and 0*a1 + 2*a2 > 0 and 1*a1 + 1*a2 > 0 and 0*a1 + 1*a2 > 0 and 2*a1 + 0*a2 > 0 and 1*a1 + 0*a2 > 0 } )

#result: { [d0 = 0, b0 = 2, c0 = -2, a1 = 1, a2 = 1] }

#wafefront hyperplane: { [a1 = 1, a2 = 1] }

#calculate wafefront hyperplane stop

#create wafefront schedule start

#part: [N] -> { S_4[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1, 0, 0, 0, 0, tw0, i0, i1, i2, i3, i4, i5] : exists  bw0, bh0, th0, bh1, th1 : 1 = 1  and 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 and 1 * th0 <= bh0 <= 1 * (th0 + 1) - 1 and 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 and 1 * th1 <= bh1 <= 1 * (th1 + 1) - 1 and bw0 = 1 * th0 + 1 * th1 and w0 = 1 * h0 + 1 * h1 and tw0 = 0 } 

#part: [N] -> { S_4[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1, 0, 0, 0, 0, tw0, i0, i1, i2, i3, i4, i5] : exists  bw0, bh0, th0, bh1, th1 : 1 = 1  and 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 and 1 * th0 <= bh0 <= 1 * (th0 + 1) - 1 and 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 and 1 * th1 <= bh1 <= 1 * (th1 + 1) - 1 and bw0 = 1 * th0 + 1 * th1 and w0 = 1 * h0 + 1 * h1 and tw0 = 0 } 

#part: [N] -> { S_4[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1, 0, 0, 0, 0, tw0, i0, i1, i2, i3, i4, i5] : exists  bw0, bh0, th0, bh1, th1 : 1 = 1  and 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 and 1 * th0 <= bh0 <= 1 * (th0 + 1) - 1 and 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 and 1 * th1 <= bh1 <= 1 * (th1 + 1) - 1 and bw0 = 1 * th0 + 1 * th1 and w0 = 1 * h0 + 1 * h1 and tw0 = 0 } 

#part: [N] -> { S_4[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1, 0, 0, 0, 0, tw0, i0, i1, i2, i3, i4, i5] : exists  bw0, bh0, th0, bh1, th1 : 1 = 1  and 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 and 1 * th0 <= bh0 <= 1 * (th0 + 1) - 1 and 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 and 1 * th1 <= bh1 <= 1 * (th1 + 1) - 1 and bw0 = 1 * th0 + 1 * th1 and w0 = 1 * h0 + 1 * h1 and tw0 = 0 } 

#part: [N] -> { S_2[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1, 0, 0, 0, 0, tw0, i0, i1, i2, i3, i4, i5] : exists  bw0, bh0, th0, bh1, th1 : 1 = 1  and 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 and 1 * th0 <= bh0 <= 1 * (th0 + 1) - 1 and 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 and 1 * th1 <= bh1 <= 1 * (th1 + 1) - 1 and bw0 = 1 * th0 + 1 * th1 and w0 = 1 * h0 + 1 * h1 and tw0 = 0 } 

#part: [N] -> { S_2[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1, 0, 0, 0, 0, tw0, i0, i1, i2, i3, i4, i5] : exists  bw0, bh0, th0, bh1, th1 : 1 = 1  and 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 and 1 * th0 <= bh0 <= 1 * (th0 + 1) - 1 and 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 and 1 * th1 <= bh1 <= 1 * (th1 + 1) - 1 and bw0 = 1 * th0 + 1 * th1 and w0 = 1 * h0 + 1 * h1 and tw0 = 0 } 

#part: [N] -> { S_1[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1, 0, 0, 0, 0, tw0, i0, i1, i2, i3, i4, i5] : exists  bw0, bh0, th0, bh1, th1 : 1 = 1  and 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 and 1 * th0 <= bh0 <= 1 * (th0 + 1) - 1 and 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 and 1 * th1 <= bh1 <= 1 * (th1 + 1) - 1 and bw0 = 1 * th0 + 1 * th1 and w0 = 1 * h0 + 1 * h1 and tw0 = 0 } 

#part: [N] -> { S_1[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1, 0, 0, 0, 0, tw0, i0, i1, i2, i3, i4, i5] : exists  bw0, bh0, th0, bh1, th1 : 1 = 1  and 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 and 1 * th0 <= bh0 <= 1 * (th0 + 1) - 1 and 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 and 1 * th1 <= bh1 <= 1 * (th1 + 1) - 1 and bw0 = 1 * th0 + 1 * th1 and w0 = 1 * h0 + 1 * h1 and tw0 = 0 } 

#part: [N] -> { S_0[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1, 0, 0, 0, 0, tw0, i0, i1, i2, i3, i4, i5] : exists  bw0, bh0, th0, bh1, th1 : 1 = 1  and 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 and 1 * th0 <= bh0 <= 1 * (th0 + 1) - 1 and 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 and 1 * th1 <= bh1 <= 1 * (th1 + 1) - 1 and bw0 = 1 * th0 + 1 * th1 and w0 = 1 * h0 + 1 * h1 and tw0 = 0 } 

#part: [N] -> { S_3[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1, 0, 0, 0, 0, tw0, i0, i1, i2, i3, i4, i5] : exists  bw0, bh0, th0, bh1, th1 : 1 = 1  and 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 and 1 * th0 <= bh0 <= 1 * (th0 + 1) - 1 and 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 and 1 * th1 <= bh1 <= 1 * (th1 + 1) - 1 and bw0 = 1 * th0 + 1 * th1 and w0 = 1 * h0 + 1 * h1 and tw0 = 0 } 

#part: [N] -> { S_3[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1, 0, 0, 0, 0, tw0, i0, i1, i2, i3, i4, i5] : exists  bw0, bh0, th0, bh1, th1 : 1 = 1  and 1 * i0 + 0 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh0 = 0 and 16 * h0 <= bh0 <= 16 * (h0 + 1) - 1 and 1 * th0 <= bh0 <= 1 * (th0 + 1) - 1 and 0 * i0 + 1 * i1 + 0 * i2 + 0 * i3 + 0 * i4 + 0 * i5 - bh1 = 0 and 32 * h1 <= bh1 <= 32 * (h1 + 1) - 1 and 1 * th1 <= bh1 <= 1 * (th1 + 1) - 1 and bw0 = 1 * th0 + 1 * th1 and w0 = 1 * h0 + 1 * h1 and tw0 = 0 } 

#wafefront schedule: [N] -> { S_4[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, i0, i1, i2, i3, i4, i5] : -15 + i0 <= 16h0 <= i0 and -i1 + 32w0 <= 32h0 <= 31 - i1 + 32w0; S_1[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, i0, i1, i2, i3, i4, i5] : -15 + i0 <= 16h0 <= i0 and -i1 + 32w0 <= 32h0 <= 31 - i1 + 32w0; S_2[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, i0, i1, i2, i3, i4, i5] : -15 + i0 <= 16h0 <= i0 and -i1 + 32w0 <= 32h0 <= 31 - i1 + 32w0; S_0[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, i0, i1, i2, i3, i4, i5] : -15 + i0 <= 16h0 <= i0 and -i1 + 32w0 <= 32h0 <= 31 - i1 + 32w0; S_3[i0, i1, i2, i3, i4, i5] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, i0, i1, i2, i3, i4, i5] : -15 + i0 <= 16h0 <= i0 and -i1 + 32w0 <= 32h0 <= 31 - i1 + 32w0 }

#create wafefront schedule stop

#create code start

#wafefront code: [N] -> { S_1[i, j, k] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 0, k, 1, j] : i >= 0 and j < N and i < k < j and k <= 2 + i and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_1[i, j, k] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 0, k, 1, -2 - i + j + k] : i >= 0 and j < N and 2 + i <= k < j and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_2[i, j, k] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 0, k, 2, j] : i >= 0 and j < N and i < k <= -2 + j and k <= 2 + i and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_2[i, j, k] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 0, k, 2, -2 - i + j + k] : i >= 0 and j < N and 2 + i <= k <= -2 + j and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_4[i, j] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 2, 29 + i, 0, 27 + j] : i >= 0 and i < j <= 29 + i and j < N and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_4[i, j] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 2, j, 0, -2 - i + 2j] : i >= 0 and 29 + i <= j < N and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_4[i, j = 29 + i] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, 29 + i, 2, 29 + i, 0, 56 + i] : 0 <= i <= -30 + N and -15 - i <= 16h0 <= -i and -29 - i + 32w0 <= 32h0 <= 2 - i + 32w0; S_0[i, j, k, m] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 0, k, 0, m] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_3[i, j] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 1, 29 + i, 0, 27 + j] : i >= 0 and i < j <= 29 + i and j < N and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_3[i, j] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 1, j, 0, -2 - i + 2j] : i >= 0 and 29 + i <= j < N and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0 }

#create code stop

#loop tile stop

#######################################################################

#######################################################################

#global schedule:
[N] -> { S_0[i, j, k, m] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 0, k, 0, m] : i >= 0 and j < N and k > i and m > k and -29 - i + j + k <= m <= -3 - i + j + k and m < j and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_4[i, j] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 2, 29 + i, 0, 27 + j] : i >= 0 and i < j <= 29 + i and j < N and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_4[i, j] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 2, j, 0, -2 - i + 2j] : i >= 0 and 29 + i <= j < N and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_1[i, j, k] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 0, k, 1, j] : i >= 0 and j < N and i < k < j and k <= 2 + i and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_1[i, j, k] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 0, k, 1, -2 - i + j + k] : i >= 0 and j < N and 2 + i <= k < j and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_2[i, j, k] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 0, k, 2, j] : i >= 0 and j < N and i < k <= -2 + j and k <= 2 + i and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_2[i, j, k] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 0, k, 2, -2 - i + j + k] : i >= 0 and j < N and 2 + i <= k <= -2 + j and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_3[i, j] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 1, 29 + i, 0, 27 + j] : i >= 0 and i < j <= 29 + i and j < N and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0; S_3[i, j] -> [0, w0, h0, h1 = w0 - h0, 0, 0, 0, 0, tw0 = 0, -i, j, 1, j, 0, -2 - i + 2j] : i >= 0 and 29 + i <= j < N and -15 - i <= 16h0 <= -i and -j + 32w0 <= 32h0 <= 31 - j + 32w0 }

#######################################################################

#######################################################################

#Does global schedule respects oryginal loop RaW deps? -> True

#Does global schedule respects oryginal loop WaW deps? -> True

#Does global schedule respects oryginal loop WaR deps? -> True

#######################################################################
