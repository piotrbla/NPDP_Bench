
//dapt code:

i = 1;
for (int i1 = 1; i1 <= N; i1 += 1) {
  {
    j = 1;
    for (int i3 = 1; i3 <= N; i3 += 1) {
      {
        m1[i1][i3] = (-2147483648);
        k = 1;
        for (int i5 = 1; i5 <= i1; i5 += 1) {
          m1[i1][i3] = ((m1[i1][i3] > (F[i1 - i5][i3] - W[i5])) ? m1[i1][i3] : (F[i1 - i5][i3] - W[i5]));
          k = (i5 + 1);
        }
        m2[i1][i3] = (-2147483648);
        k = 1;
        for (int i5 = 1; i5 <= i3; i5 += 1) {
          m2[i1][i3] = ((m2[i1][i3] > (F[i1][i3 - i5] - W[i5])) ? m2[i1][i3] : (F[i1][i3 - i5] - W[i5]));
          k = (i5 + 1);
        }
        F[i1][i3] = ((0 > (((F[i1 - 1][i3 - 1] + s(a[i1], b[i1])) > ((m1[i1][i3] > m2[i1][i3]) ? m1[i1][i3] : m2[i1][i3])) ? (F[i1 - 1][i3 - 1] + s(a[i1], b[i1])) : ((m1[i1][i3] > m2[i1][i3]) ? m1[i1][i3] : m2[i1][i3]))) ? 0 : (((F[i1 - 1][i3 - 1] + s(a[i1], b[i1])) > ((m1[i1][i3] > m2[i1][i3]) ? m1[i1][i3] : m2[i1][i3])) ? (F[i1 - 1][i3 - 1] + s(a[i1], b[i1])) : ((m1[i1][i3] > m2[i1][i3]) ? m1[i1][i3] : m2[i1][i3])));
      }
      j = (i3 + 1);
    }
  }
  i = (i1 + 1);
}
